/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jllvm.bindings;

public class TargetMachine {
  public static LLVMOpaqueStringRefArray new_StringArray(int nelements) {
    long cPtr = TargetMachineJNI.new_StringArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueStringRefArray(cPtr, false);
  }

  public static void delete_StringArray(LLVMOpaqueStringRefArray ary) {
    TargetMachineJNI.delete_StringArray(LLVMOpaqueStringRefArray.getCPtr(ary));
  }

  public static String StringArray_getitem(LLVMOpaqueStringRefArray ary, int index) {
    return TargetMachineJNI.StringArray_getitem(LLVMOpaqueStringRefArray.getCPtr(ary), index);
  }

  public static void StringArray_setitem(LLVMOpaqueStringRefArray ary, int index, String value) {
    TargetMachineJNI.StringArray_setitem(LLVMOpaqueStringRefArray.getCPtr(ary), index, value);
  }

  public static LLVMTarget LLVMGetFirstTarget() {
    long cPtr = TargetMachineJNI.LLVMGetFirstTarget();
    return (cPtr == 0) ? null : new LLVMTarget(cPtr, false);
  }

  public static LLVMTarget LLVMGetNextTarget(LLVMTarget T) {
    long cPtr = TargetMachineJNI.LLVMGetNextTarget(LLVMTarget.getCPtr(T));
    return (cPtr == 0) ? null : new LLVMTarget(cPtr, false);
  }

  public static String LLVMGetTargetName(LLVMTarget T) {
    return TargetMachineJNI.LLVMGetTargetName(LLVMTarget.getCPtr(T));
  }

  public static String LLVMGetTargetDescription(LLVMTarget T) {
    return TargetMachineJNI.LLVMGetTargetDescription(LLVMTarget.getCPtr(T));
  }

  public static int LLVMTargetHasJIT(LLVMTarget T) {
    return TargetMachineJNI.LLVMTargetHasJIT(LLVMTarget.getCPtr(T));
  }

  public static int LLVMTargetHasTargetMachine(LLVMTarget T) {
    return TargetMachineJNI.LLVMTargetHasTargetMachine(LLVMTarget.getCPtr(T));
  }

  public static int LLVMTargetHasAsmBackend(LLVMTarget T) {
    return TargetMachineJNI.LLVMTargetHasAsmBackend(LLVMTarget.getCPtr(T));
  }

  public static LLVMTargetMachine LLVMCreateTargetMachine(LLVMTarget T, String Triple, String CPU, String Features, LLVMCodeGenOptLevel Level, LLVMRelocMode Reloc, LLVMCodeModel CodeModel) {
    long cPtr = TargetMachineJNI.LLVMCreateTargetMachine(LLVMTarget.getCPtr(T), Triple, CPU, Features, Level.swigValue(), Reloc.swigValue(), CodeModel.swigValue());
    return (cPtr == 0) ? null : new LLVMTargetMachine(cPtr, false);
  }

  public static void LLVMDisposeTargetMachine(LLVMTargetMachine T) {
    TargetMachineJNI.LLVMDisposeTargetMachine(LLVMTargetMachine.getCPtr(T));
  }

  public static LLVMTarget LLVMGetTargetMachineTarget(LLVMTargetMachine T) {
    long cPtr = TargetMachineJNI.LLVMGetTargetMachineTarget(LLVMTargetMachine.getCPtr(T));
    return (cPtr == 0) ? null : new LLVMTarget(cPtr, false);
  }

  public static String LLVMGetTargetMachineTriple(LLVMTargetMachine T) {
    return TargetMachineJNI.LLVMGetTargetMachineTriple(LLVMTargetMachine.getCPtr(T));
  }

  public static String LLVMGetTargetMachineCPU(LLVMTargetMachine T) {
    return TargetMachineJNI.LLVMGetTargetMachineCPU(LLVMTargetMachine.getCPtr(T));
  }

  public static String LLVMGetTargetMachineFeatureString(LLVMTargetMachine T) {
    return TargetMachineJNI.LLVMGetTargetMachineFeatureString(LLVMTargetMachine.getCPtr(T));
  }

  public static LLVMOpaqueTargetData LLVMGetTargetMachineData(LLVMTargetMachine T) {
    long cPtr = TargetMachineJNI.LLVMGetTargetMachineData(LLVMTargetMachine.getCPtr(T));
    return (cPtr == 0) ? null : new LLVMOpaqueTargetData(cPtr, false);
  }

  public static int LLVMTargetMachineEmitToFile(LLVMTargetMachine T, LLVMOpaqueModule M, String Filename, LLVMCodeGenFileType codegen, LLVMOpaqueStringRefArray ErrorMessage) {
    return TargetMachineJNI.LLVMTargetMachineEmitToFile(LLVMTargetMachine.getCPtr(T), LLVMOpaqueModule.getCPtr(M), Filename, codegen.swigValue(), LLVMOpaqueStringRefArray.getCPtr(ErrorMessage));
  }

}
