/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jllvm.bindings;

public class Object {
  public static LLVMOpaqueObjectFile LLVMCreateObjectFile(LLVMOpaqueMemoryBuffer MemBuf) {
    long cPtr = ObjectJNI.LLVMCreateObjectFile(LLVMOpaqueMemoryBuffer.getCPtr(MemBuf));
    return (cPtr == 0) ? null : new LLVMOpaqueObjectFile(cPtr, false);
  }

  public static void LLVMDisposeObjectFile(LLVMOpaqueObjectFile ObjectFile) {
    ObjectJNI.LLVMDisposeObjectFile(LLVMOpaqueObjectFile.getCPtr(ObjectFile));
  }

  public static LLVMOpaqueSectionIterator LLVMGetSections(LLVMOpaqueObjectFile ObjectFile) {
    long cPtr = ObjectJNI.LLVMGetSections(LLVMOpaqueObjectFile.getCPtr(ObjectFile));
    return (cPtr == 0) ? null : new LLVMOpaqueSectionIterator(cPtr, false);
  }

  public static void LLVMDisposeSectionIterator(LLVMOpaqueSectionIterator SI) {
    ObjectJNI.LLVMDisposeSectionIterator(LLVMOpaqueSectionIterator.getCPtr(SI));
  }

  public static int LLVMIsSectionIteratorAtEnd(LLVMOpaqueObjectFile ObjectFile, LLVMOpaqueSectionIterator SI) {
    return ObjectJNI.LLVMIsSectionIteratorAtEnd(LLVMOpaqueObjectFile.getCPtr(ObjectFile), LLVMOpaqueSectionIterator.getCPtr(SI));
  }

  public static void LLVMMoveToNextSection(LLVMOpaqueSectionIterator SI) {
    ObjectJNI.LLVMMoveToNextSection(LLVMOpaqueSectionIterator.getCPtr(SI));
  }

  public static void LLVMMoveToContainingSection(LLVMOpaqueSectionIterator Sect, LLVMOpaqueSymbolIterator Sym) {
    ObjectJNI.LLVMMoveToContainingSection(LLVMOpaqueSectionIterator.getCPtr(Sect), LLVMOpaqueSymbolIterator.getCPtr(Sym));
  }

  public static LLVMOpaqueSymbolIterator LLVMGetSymbols(LLVMOpaqueObjectFile ObjectFile) {
    long cPtr = ObjectJNI.LLVMGetSymbols(LLVMOpaqueObjectFile.getCPtr(ObjectFile));
    return (cPtr == 0) ? null : new LLVMOpaqueSymbolIterator(cPtr, false);
  }

  public static void LLVMDisposeSymbolIterator(LLVMOpaqueSymbolIterator SI) {
    ObjectJNI.LLVMDisposeSymbolIterator(LLVMOpaqueSymbolIterator.getCPtr(SI));
  }

  public static int LLVMIsSymbolIteratorAtEnd(LLVMOpaqueObjectFile ObjectFile, LLVMOpaqueSymbolIterator SI) {
    return ObjectJNI.LLVMIsSymbolIteratorAtEnd(LLVMOpaqueObjectFile.getCPtr(ObjectFile), LLVMOpaqueSymbolIterator.getCPtr(SI));
  }

  public static void LLVMMoveToNextSymbol(LLVMOpaqueSymbolIterator SI) {
    ObjectJNI.LLVMMoveToNextSymbol(LLVMOpaqueSymbolIterator.getCPtr(SI));
  }

  public static String LLVMGetSectionName(LLVMOpaqueSectionIterator SI) {
    return ObjectJNI.LLVMGetSectionName(LLVMOpaqueSectionIterator.getCPtr(SI));
  }

  public static LLVMOpaqueUint64_t LLVMGetSectionSize(LLVMOpaqueSectionIterator SI) {
    return new LLVMOpaqueUint64_t(ObjectJNI.LLVMGetSectionSize(LLVMOpaqueSectionIterator.getCPtr(SI)), true);
  }

  public static String LLVMGetSectionContents(LLVMOpaqueSectionIterator SI) {
    return ObjectJNI.LLVMGetSectionContents(LLVMOpaqueSectionIterator.getCPtr(SI));
  }

  public static LLVMOpaqueUint64_t LLVMGetSectionAddress(LLVMOpaqueSectionIterator SI) {
    return new LLVMOpaqueUint64_t(ObjectJNI.LLVMGetSectionAddress(LLVMOpaqueSectionIterator.getCPtr(SI)), true);
  }

  public static int LLVMGetSectionContainsSymbol(LLVMOpaqueSectionIterator SI, LLVMOpaqueSymbolIterator Sym) {
    return ObjectJNI.LLVMGetSectionContainsSymbol(LLVMOpaqueSectionIterator.getCPtr(SI), LLVMOpaqueSymbolIterator.getCPtr(Sym));
  }

  public static LLVMOpaqueRelocationIterator LLVMGetRelocations(LLVMOpaqueSectionIterator Section) {
    long cPtr = ObjectJNI.LLVMGetRelocations(LLVMOpaqueSectionIterator.getCPtr(Section));
    return (cPtr == 0) ? null : new LLVMOpaqueRelocationIterator(cPtr, false);
  }

  public static void LLVMDisposeRelocationIterator(LLVMOpaqueRelocationIterator RI) {
    ObjectJNI.LLVMDisposeRelocationIterator(LLVMOpaqueRelocationIterator.getCPtr(RI));
  }

  public static int LLVMIsRelocationIteratorAtEnd(LLVMOpaqueSectionIterator Section, LLVMOpaqueRelocationIterator RI) {
    return ObjectJNI.LLVMIsRelocationIteratorAtEnd(LLVMOpaqueSectionIterator.getCPtr(Section), LLVMOpaqueRelocationIterator.getCPtr(RI));
  }

  public static void LLVMMoveToNextRelocation(LLVMOpaqueRelocationIterator RI) {
    ObjectJNI.LLVMMoveToNextRelocation(LLVMOpaqueRelocationIterator.getCPtr(RI));
  }

  public static String LLVMGetSymbolName(LLVMOpaqueSymbolIterator SI) {
    return ObjectJNI.LLVMGetSymbolName(LLVMOpaqueSymbolIterator.getCPtr(SI));
  }

  public static LLVMOpaqueUint64_t LLVMGetSymbolAddress(LLVMOpaqueSymbolIterator SI) {
    return new LLVMOpaqueUint64_t(ObjectJNI.LLVMGetSymbolAddress(LLVMOpaqueSymbolIterator.getCPtr(SI)), true);
  }

  public static LLVMOpaqueUint64_t LLVMGetSymbolFileOffset(LLVMOpaqueSymbolIterator SI) {
    return new LLVMOpaqueUint64_t(ObjectJNI.LLVMGetSymbolFileOffset(LLVMOpaqueSymbolIterator.getCPtr(SI)), true);
  }

  public static LLVMOpaqueUint64_t LLVMGetSymbolSize(LLVMOpaqueSymbolIterator SI) {
    return new LLVMOpaqueUint64_t(ObjectJNI.LLVMGetSymbolSize(LLVMOpaqueSymbolIterator.getCPtr(SI)), true);
  }

  public static LLVMOpaqueUint64_t LLVMGetRelocationAddress(LLVMOpaqueRelocationIterator RI) {
    return new LLVMOpaqueUint64_t(ObjectJNI.LLVMGetRelocationAddress(LLVMOpaqueRelocationIterator.getCPtr(RI)), true);
  }

  public static LLVMOpaqueUint64_t LLVMGetRelocationOffset(LLVMOpaqueRelocationIterator RI) {
    return new LLVMOpaqueUint64_t(ObjectJNI.LLVMGetRelocationOffset(LLVMOpaqueRelocationIterator.getCPtr(RI)), true);
  }

  public static LLVMOpaqueSymbolIterator LLVMGetRelocationSymbol(LLVMOpaqueRelocationIterator RI) {
    long cPtr = ObjectJNI.LLVMGetRelocationSymbol(LLVMOpaqueRelocationIterator.getCPtr(RI));
    return (cPtr == 0) ? null : new LLVMOpaqueSymbolIterator(cPtr, false);
  }

  public static LLVMOpaqueUint64_t LLVMGetRelocationType(LLVMOpaqueRelocationIterator RI) {
    return new LLVMOpaqueUint64_t(ObjectJNI.LLVMGetRelocationType(LLVMOpaqueRelocationIterator.getCPtr(RI)), true);
  }

  public static String LLVMGetRelocationTypeName(LLVMOpaqueRelocationIterator RI) {
    return ObjectJNI.LLVMGetRelocationTypeName(LLVMOpaqueRelocationIterator.getCPtr(RI));
  }

  public static String LLVMGetRelocationValueString(LLVMOpaqueRelocationIterator RI) {
    return ObjectJNI.LLVMGetRelocationValueString(LLVMOpaqueRelocationIterator.getCPtr(RI));
  }

}
