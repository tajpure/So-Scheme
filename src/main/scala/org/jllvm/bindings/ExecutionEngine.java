/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jllvm.bindings;

public class ExecutionEngine {
  public static LLVMOpaqueValueRefArray new_LLVMValueRefArray(int nelements) {
    long cPtr = ExecutionEngineJNI.new_LLVMValueRefArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueValueRefArray(cPtr, false);
  }

  public static void delete_LLVMValueRefArray(LLVMOpaqueValueRefArray ary) {
    ExecutionEngineJNI.delete_LLVMValueRefArray(LLVMOpaqueValueRefArray.getCPtr(ary));
  }

  public static LLVMOpaqueValue LLVMValueRefArray_getitem(LLVMOpaqueValueRefArray ary, int index) {
    long cPtr = ExecutionEngineJNI.LLVMValueRefArray_getitem(LLVMOpaqueValueRefArray.getCPtr(ary), index);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMValueRefArray_setitem(LLVMOpaqueValueRefArray ary, int index, LLVMOpaqueValue value) {
    ExecutionEngineJNI.LLVMValueRefArray_setitem(LLVMOpaqueValueRefArray.getCPtr(ary), index, LLVMOpaqueValue.getCPtr(value));
  }

  public static LLVMOpaqueGenericValueRefArray new_LLVMGenericValueRefArray(int nelements) {
    long cPtr = ExecutionEngineJNI.new_LLVMGenericValueRefArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueGenericValueRefArray(cPtr, false);
  }

  public static void delete_LLVMGenericValueRefArray(LLVMOpaqueGenericValueRefArray ary) {
    ExecutionEngineJNI.delete_LLVMGenericValueRefArray(LLVMOpaqueGenericValueRefArray.getCPtr(ary));
  }

  public static LLVMOpaqueGenericValue LLVMGenericValueRefArray_getitem(LLVMOpaqueGenericValueRefArray ary, int index) {
    long cPtr = ExecutionEngineJNI.LLVMGenericValueRefArray_getitem(LLVMOpaqueGenericValueRefArray.getCPtr(ary), index);
    return (cPtr == 0) ? null : new LLVMOpaqueGenericValue(cPtr, false);
  }

  public static void LLVMGenericValueRefArray_setitem(LLVMOpaqueGenericValueRefArray ary, int index, LLVMOpaqueGenericValue value) {
    ExecutionEngineJNI.LLVMGenericValueRefArray_setitem(LLVMOpaqueGenericValueRefArray.getCPtr(ary), index, LLVMOpaqueGenericValue.getCPtr(value));
  }

  public static LLVMOpaqueModuleRefArray new_LLVMModuleRefArray(int nelements) {
    long cPtr = ExecutionEngineJNI.new_LLVMModuleRefArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueModuleRefArray(cPtr, false);
  }

  public static void delete_LLVMModuleRefArray(LLVMOpaqueModuleRefArray ary) {
    ExecutionEngineJNI.delete_LLVMModuleRefArray(LLVMOpaqueModuleRefArray.getCPtr(ary));
  }

  public static LLVMOpaqueModule LLVMModuleRefArray_getitem(LLVMOpaqueModuleRefArray ary, int index) {
    long cPtr = ExecutionEngineJNI.LLVMModuleRefArray_getitem(LLVMOpaqueModuleRefArray.getCPtr(ary), index);
    return (cPtr == 0) ? null : new LLVMOpaqueModule(cPtr, false);
  }

  public static void LLVMModuleRefArray_setitem(LLVMOpaqueModuleRefArray ary, int index, LLVMOpaqueModule value) {
    ExecutionEngineJNI.LLVMModuleRefArray_setitem(LLVMOpaqueModuleRefArray.getCPtr(ary), index, LLVMOpaqueModule.getCPtr(value));
  }

  public static LLVMOpaqueExecutionEngineRefArray new_LLVMExecutionEngineRefArray(int nelements) {
    long cPtr = ExecutionEngineJNI.new_LLVMExecutionEngineRefArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueExecutionEngineRefArray(cPtr, false);
  }

  public static void delete_LLVMExecutionEngineRefArray(LLVMOpaqueExecutionEngineRefArray ary) {
    ExecutionEngineJNI.delete_LLVMExecutionEngineRefArray(LLVMOpaqueExecutionEngineRefArray.getCPtr(ary));
  }

  public static LLVMOpaqueExecutionEngine LLVMExecutionEngineRefArray_getitem(LLVMOpaqueExecutionEngineRefArray ary, int index) {
    long cPtr = ExecutionEngineJNI.LLVMExecutionEngineRefArray_getitem(LLVMOpaqueExecutionEngineRefArray.getCPtr(ary), index);
    return (cPtr == 0) ? null : new LLVMOpaqueExecutionEngine(cPtr, false);
  }

  public static void LLVMExecutionEngineRefArray_setitem(LLVMOpaqueExecutionEngineRefArray ary, int index, LLVMOpaqueExecutionEngine value) {
    ExecutionEngineJNI.LLVMExecutionEngineRefArray_setitem(LLVMOpaqueExecutionEngineRefArray.getCPtr(ary), index, LLVMOpaqueExecutionEngine.getCPtr(value));
  }

  public static LLVMOpaqueStringRefArray new_StringArray(int nelements) {
    long cPtr = ExecutionEngineJNI.new_StringArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueStringRefArray(cPtr, false);
  }

  public static void delete_StringArray(LLVMOpaqueStringRefArray ary) {
    ExecutionEngineJNI.delete_StringArray(LLVMOpaqueStringRefArray.getCPtr(ary));
  }

  public static String StringArray_getitem(LLVMOpaqueStringRefArray ary, int index) {
    return ExecutionEngineJNI.StringArray_getitem(LLVMOpaqueStringRefArray.getCPtr(ary), index);
  }

  public static void StringArray_setitem(LLVMOpaqueStringRefArray ary, int index, String value) {
    ExecutionEngineJNI.StringArray_setitem(LLVMOpaqueStringRefArray.getCPtr(ary), index, value);
  }

  public static void LLVMLinkInJIT() {
    ExecutionEngineJNI.LLVMLinkInJIT();
  }

  public static void LLVMLinkInInterpreter() {
    ExecutionEngineJNI.LLVMLinkInInterpreter();
  }

  public static LLVMOpaqueGenericValue LLVMCreateGenericValueOfInt(LLVMOpaqueType Ty, java.math.BigInteger N, int IsSigned) {
    long cPtr = ExecutionEngineJNI.LLVMCreateGenericValueOfInt(LLVMOpaqueType.getCPtr(Ty), N, IsSigned);
    return (cPtr == 0) ? null : new LLVMOpaqueGenericValue(cPtr, false);
  }

  public static LLVMOpaqueGenericValue LLVMCreateGenericValueOfPointer(LLVMOpaqueVoid P) {
    long cPtr = ExecutionEngineJNI.LLVMCreateGenericValueOfPointer(LLVMOpaqueVoid.getCPtr(P));
    return (cPtr == 0) ? null : new LLVMOpaqueGenericValue(cPtr, false);
  }

  public static LLVMOpaqueGenericValue LLVMCreateGenericValueOfFloat(LLVMOpaqueType Ty, double N) {
    long cPtr = ExecutionEngineJNI.LLVMCreateGenericValueOfFloat(LLVMOpaqueType.getCPtr(Ty), N);
    return (cPtr == 0) ? null : new LLVMOpaqueGenericValue(cPtr, false);
  }

  public static long LLVMGenericValueIntWidth(LLVMOpaqueGenericValue GenValRef) {
    return ExecutionEngineJNI.LLVMGenericValueIntWidth(LLVMOpaqueGenericValue.getCPtr(GenValRef));
  }

  public static java.math.BigInteger LLVMGenericValueToInt(LLVMOpaqueGenericValue GenVal, int IsSigned) {
    return ExecutionEngineJNI.LLVMGenericValueToInt(LLVMOpaqueGenericValue.getCPtr(GenVal), IsSigned);
  }

  public static LLVMOpaqueVoid LLVMGenericValueToPointer(LLVMOpaqueGenericValue GenVal) {
    long cPtr = ExecutionEngineJNI.LLVMGenericValueToPointer(LLVMOpaqueGenericValue.getCPtr(GenVal));
    return (cPtr == 0) ? null : new LLVMOpaqueVoid(cPtr, false);
  }

  public static double LLVMGenericValueToFloat(LLVMOpaqueType TyRef, LLVMOpaqueGenericValue GenVal) {
    return ExecutionEngineJNI.LLVMGenericValueToFloat(LLVMOpaqueType.getCPtr(TyRef), LLVMOpaqueGenericValue.getCPtr(GenVal));
  }

  public static void LLVMDisposeGenericValue(LLVMOpaqueGenericValue GenVal) {
    ExecutionEngineJNI.LLVMDisposeGenericValue(LLVMOpaqueGenericValue.getCPtr(GenVal));
  }

  public static int LLVMCreateExecutionEngineForModule(LLVMOpaqueExecutionEngineRefArray OutEE, LLVMOpaqueModule M, LLVMOpaqueStringRefArray OutError) {
    return ExecutionEngineJNI.LLVMCreateExecutionEngineForModule(LLVMOpaqueExecutionEngineRefArray.getCPtr(OutEE), LLVMOpaqueModule.getCPtr(M), LLVMOpaqueStringRefArray.getCPtr(OutError));
  }

  public static int LLVMCreateInterpreterForModule(LLVMOpaqueExecutionEngineRefArray OutInterp, LLVMOpaqueModule M, LLVMOpaqueStringRefArray OutError) {
    return ExecutionEngineJNI.LLVMCreateInterpreterForModule(LLVMOpaqueExecutionEngineRefArray.getCPtr(OutInterp), LLVMOpaqueModule.getCPtr(M), LLVMOpaqueStringRefArray.getCPtr(OutError));
  }

  public static int LLVMCreateJITCompilerForModule(LLVMOpaqueExecutionEngineRefArray OutJIT, LLVMOpaqueModule M, long OptLevel, LLVMOpaqueStringRefArray OutError) {
    return ExecutionEngineJNI.LLVMCreateJITCompilerForModule(LLVMOpaqueExecutionEngineRefArray.getCPtr(OutJIT), LLVMOpaqueModule.getCPtr(M), OptLevel, LLVMOpaqueStringRefArray.getCPtr(OutError));
  }

  public static int LLVMCreateExecutionEngine(LLVMOpaqueExecutionEngineRefArray OutEE, LLVMOpaqueModuleProvider MP, LLVMOpaqueStringRefArray OutError) {
    return ExecutionEngineJNI.LLVMCreateExecutionEngine(LLVMOpaqueExecutionEngineRefArray.getCPtr(OutEE), LLVMOpaqueModuleProvider.getCPtr(MP), LLVMOpaqueStringRefArray.getCPtr(OutError));
  }

  public static int LLVMCreateInterpreter(LLVMOpaqueExecutionEngineRefArray OutInterp, LLVMOpaqueModuleProvider MP, LLVMOpaqueStringRefArray OutError) {
    return ExecutionEngineJNI.LLVMCreateInterpreter(LLVMOpaqueExecutionEngineRefArray.getCPtr(OutInterp), LLVMOpaqueModuleProvider.getCPtr(MP), LLVMOpaqueStringRefArray.getCPtr(OutError));
  }

  public static int LLVMCreateJITCompiler(LLVMOpaqueExecutionEngineRefArray OutJIT, LLVMOpaqueModuleProvider MP, long OptLevel, LLVMOpaqueStringRefArray OutError) {
    return ExecutionEngineJNI.LLVMCreateJITCompiler(LLVMOpaqueExecutionEngineRefArray.getCPtr(OutJIT), LLVMOpaqueModuleProvider.getCPtr(MP), OptLevel, LLVMOpaqueStringRefArray.getCPtr(OutError));
  }

  public static void LLVMDisposeExecutionEngine(LLVMOpaqueExecutionEngine EE) {
    ExecutionEngineJNI.LLVMDisposeExecutionEngine(LLVMOpaqueExecutionEngine.getCPtr(EE));
  }

  public static void LLVMRunStaticConstructors(LLVMOpaqueExecutionEngine EE) {
    ExecutionEngineJNI.LLVMRunStaticConstructors(LLVMOpaqueExecutionEngine.getCPtr(EE));
  }

  public static void LLVMRunStaticDestructors(LLVMOpaqueExecutionEngine EE) {
    ExecutionEngineJNI.LLVMRunStaticDestructors(LLVMOpaqueExecutionEngine.getCPtr(EE));
  }

  public static int LLVMRunFunctionAsMain(LLVMOpaqueExecutionEngine EE, LLVMOpaqueValue F, long ArgC, LLVMOpaqueStringRefArray ArgV, LLVMOpaqueStringRefArray EnvP) {
    return ExecutionEngineJNI.LLVMRunFunctionAsMain(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueValue.getCPtr(F), ArgC, LLVMOpaqueStringRefArray.getCPtr(ArgV), LLVMOpaqueStringRefArray.getCPtr(EnvP));
  }

  public static LLVMOpaqueGenericValue LLVMRunFunction(LLVMOpaqueExecutionEngine EE, LLVMOpaqueValue F, long NumArgs, LLVMOpaqueGenericValueRefArray Args) {
    long cPtr = ExecutionEngineJNI.LLVMRunFunction(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueValue.getCPtr(F), NumArgs, LLVMOpaqueGenericValueRefArray.getCPtr(Args));
    return (cPtr == 0) ? null : new LLVMOpaqueGenericValue(cPtr, false);
  }

  public static void LLVMFreeMachineCodeForFunction(LLVMOpaqueExecutionEngine EE, LLVMOpaqueValue F) {
    ExecutionEngineJNI.LLVMFreeMachineCodeForFunction(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueValue.getCPtr(F));
  }

  public static void LLVMAddModule(LLVMOpaqueExecutionEngine EE, LLVMOpaqueModule M) {
    ExecutionEngineJNI.LLVMAddModule(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueModule.getCPtr(M));
  }

  public static void LLVMAddModuleProvider(LLVMOpaqueExecutionEngine EE, LLVMOpaqueModuleProvider MP) {
    ExecutionEngineJNI.LLVMAddModuleProvider(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueModuleProvider.getCPtr(MP));
  }

  public static int LLVMRemoveModule(LLVMOpaqueExecutionEngine EE, LLVMOpaqueModule M, LLVMOpaqueModuleRefArray OutMod, LLVMOpaqueStringRefArray OutError) {
    return ExecutionEngineJNI.LLVMRemoveModule(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueModule.getCPtr(M), LLVMOpaqueModuleRefArray.getCPtr(OutMod), LLVMOpaqueStringRefArray.getCPtr(OutError));
  }

  public static int LLVMRemoveModuleProvider(LLVMOpaqueExecutionEngine EE, LLVMOpaqueModuleProvider MP, LLVMOpaqueModuleRefArray OutMod, LLVMOpaqueStringRefArray OutError) {
    return ExecutionEngineJNI.LLVMRemoveModuleProvider(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueModuleProvider.getCPtr(MP), LLVMOpaqueModuleRefArray.getCPtr(OutMod), LLVMOpaqueStringRefArray.getCPtr(OutError));
  }

  public static int LLVMFindFunction(LLVMOpaqueExecutionEngine EE, String Name, LLVMOpaqueValueRefArray OutFn) {
    return ExecutionEngineJNI.LLVMFindFunction(LLVMOpaqueExecutionEngine.getCPtr(EE), Name, LLVMOpaqueValueRefArray.getCPtr(OutFn));
  }

  public static LLVMOpaqueVoid LLVMRecompileAndRelinkFunction(LLVMOpaqueExecutionEngine EE, LLVMOpaqueValue Fn) {
    long cPtr = ExecutionEngineJNI.LLVMRecompileAndRelinkFunction(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueValue.getCPtr(Fn));
    return (cPtr == 0) ? null : new LLVMOpaqueVoid(cPtr, false);
  }

  public static LLVMOpaqueTargetData LLVMGetExecutionEngineTargetData(LLVMOpaqueExecutionEngine EE) {
    long cPtr = ExecutionEngineJNI.LLVMGetExecutionEngineTargetData(LLVMOpaqueExecutionEngine.getCPtr(EE));
    return (cPtr == 0) ? null : new LLVMOpaqueTargetData(cPtr, false);
  }

  public static void LLVMAddGlobalMapping(LLVMOpaqueExecutionEngine EE, LLVMOpaqueValue Global, LLVMOpaqueVoid Addr) {
    ExecutionEngineJNI.LLVMAddGlobalMapping(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueValue.getCPtr(Global), LLVMOpaqueVoid.getCPtr(Addr));
  }

  public static LLVMOpaqueVoid LLVMGetPointerToGlobal(LLVMOpaqueExecutionEngine EE, LLVMOpaqueValue Global) {
    long cPtr = ExecutionEngineJNI.LLVMGetPointerToGlobal(LLVMOpaqueExecutionEngine.getCPtr(EE), LLVMOpaqueValue.getCPtr(Global));
    return (cPtr == 0) ? null : new LLVMOpaqueVoid(cPtr, false);
  }

}
