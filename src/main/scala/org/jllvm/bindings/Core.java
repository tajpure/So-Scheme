/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jllvm.bindings;

public class Core {
  public static LLVMOpaqueTypeRefArray new_LLVMTypeRefArray(int nelements) {
    long cPtr = CoreJNI.new_LLVMTypeRefArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueTypeRefArray(cPtr, false);
  }

  public static void delete_LLVMTypeRefArray(LLVMOpaqueTypeRefArray ary) {
    CoreJNI.delete_LLVMTypeRefArray(LLVMOpaqueTypeRefArray.getCPtr(ary));
  }

  public static LLVMOpaqueType LLVMTypeRefArray_getitem(LLVMOpaqueTypeRefArray ary, int index) {
    long cPtr = CoreJNI.LLVMTypeRefArray_getitem(LLVMOpaqueTypeRefArray.getCPtr(ary), index);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static void LLVMTypeRefArray_setitem(LLVMOpaqueTypeRefArray ary, int index, LLVMOpaqueType value) {
    CoreJNI.LLVMTypeRefArray_setitem(LLVMOpaqueTypeRefArray.getCPtr(ary), index, LLVMOpaqueType.getCPtr(value));
  }

  public static LLVMOpaqueValueRefArray new_LLVMValueRefArray(int nelements) {
    long cPtr = CoreJNI.new_LLVMValueRefArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueValueRefArray(cPtr, false);
  }

  public static void delete_LLVMValueRefArray(LLVMOpaqueValueRefArray ary) {
    CoreJNI.delete_LLVMValueRefArray(LLVMOpaqueValueRefArray.getCPtr(ary));
  }

  public static LLVMOpaqueValue LLVMValueRefArray_getitem(LLVMOpaqueValueRefArray ary, int index) {
    long cPtr = CoreJNI.LLVMValueRefArray_getitem(LLVMOpaqueValueRefArray.getCPtr(ary), index);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMValueRefArray_setitem(LLVMOpaqueValueRefArray ary, int index, LLVMOpaqueValue value) {
    CoreJNI.LLVMValueRefArray_setitem(LLVMOpaqueValueRefArray.getCPtr(ary), index, LLVMOpaqueValue.getCPtr(value));
  }

  public static LLVMOpaqueUnsigned_int new_UnsignedIntArray(int nelements) {
    long cPtr = CoreJNI.new_UnsignedIntArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueUnsigned_int(cPtr, false);
  }

  public static void delete_UnsignedIntArray(LLVMOpaqueUnsigned_int ary) {
    CoreJNI.delete_UnsignedIntArray(LLVMOpaqueUnsigned_int.getCPtr(ary));
  }

  public static long UnsignedIntArray_getitem(LLVMOpaqueUnsigned_int ary, int index) {
    return CoreJNI.UnsignedIntArray_getitem(LLVMOpaqueUnsigned_int.getCPtr(ary), index);
  }

  public static void UnsignedIntArray_setitem(LLVMOpaqueUnsigned_int ary, int index, long value) {
    CoreJNI.UnsignedIntArray_setitem(LLVMOpaqueUnsigned_int.getCPtr(ary), index, value);
  }

  public static LLVMOpaqueBasicBlockRefArray new_LLVMBasicBlockRefArray(int nelements) {
    long cPtr = CoreJNI.new_LLVMBasicBlockRefArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlockRefArray(cPtr, false);
  }

  public static void delete_LLVMBasicBlockRefArray(LLVMOpaqueBasicBlockRefArray ary) {
    CoreJNI.delete_LLVMBasicBlockRefArray(LLVMOpaqueBasicBlockRefArray.getCPtr(ary));
  }

  public static LLVMOpaqueBasicBlock LLVMBasicBlockRefArray_getitem(LLVMOpaqueBasicBlockRefArray ary, int index) {
    long cPtr = CoreJNI.LLVMBasicBlockRefArray_getitem(LLVMOpaqueBasicBlockRefArray.getCPtr(ary), index);
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static void LLVMBasicBlockRefArray_setitem(LLVMOpaqueBasicBlockRefArray ary, int index, LLVMOpaqueBasicBlock value) {
    CoreJNI.LLVMBasicBlockRefArray_setitem(LLVMOpaqueBasicBlockRefArray.getCPtr(ary), index, LLVMOpaqueBasicBlock.getCPtr(value));
  }

  public static LLVMOpaqueStringRefArray new_StringArray(int nelements) {
    long cPtr = CoreJNI.new_StringArray(nelements);
    return (cPtr == 0) ? null : new LLVMOpaqueStringRefArray(cPtr, false);
  }

  public static void delete_StringArray(LLVMOpaqueStringRefArray ary) {
    CoreJNI.delete_StringArray(LLVMOpaqueStringRefArray.getCPtr(ary));
  }

  public static String StringArray_getitem(LLVMOpaqueStringRefArray ary, int index) {
    return CoreJNI.StringArray_getitem(LLVMOpaqueStringRefArray.getCPtr(ary), index);
  }

  public static void StringArray_setitem(LLVMOpaqueStringRefArray ary, int index, String value) {
    CoreJNI.StringArray_setitem(LLVMOpaqueStringRefArray.getCPtr(ary), index, value);
  }

  public static void LLVMInitializeCore(LLVMOpaquePassRegistry R) {
    CoreJNI.LLVMInitializeCore(LLVMOpaquePassRegistry.getCPtr(R));
  }

  public static void LLVMDisposeMessage(String Message) {
    CoreJNI.LLVMDisposeMessage(Message);
  }

  public static LLVMOpaqueContext LLVMContextCreate() {
    long cPtr = CoreJNI.LLVMContextCreate();
    return (cPtr == 0) ? null : new LLVMOpaqueContext(cPtr, false);
  }

  public static LLVMOpaqueContext LLVMGetGlobalContext() {
    long cPtr = CoreJNI.LLVMGetGlobalContext();
    return (cPtr == 0) ? null : new LLVMOpaqueContext(cPtr, false);
  }

  public static void LLVMContextDispose(LLVMOpaqueContext C) {
    CoreJNI.LLVMContextDispose(LLVMOpaqueContext.getCPtr(C));
  }

  public static long LLVMGetMDKindIDInContext(LLVMOpaqueContext C, String Name, long SLen) {
    return CoreJNI.LLVMGetMDKindIDInContext(LLVMOpaqueContext.getCPtr(C), Name, SLen);
  }

  public static long LLVMGetMDKindID(String Name, long SLen) {
    return CoreJNI.LLVMGetMDKindID(Name, SLen);
  }

  public static LLVMOpaqueModule LLVMModuleCreateWithName(String ModuleID) {
    long cPtr = CoreJNI.LLVMModuleCreateWithName(ModuleID);
    return (cPtr == 0) ? null : new LLVMOpaqueModule(cPtr, false);
  }

  public static LLVMOpaqueModule LLVMModuleCreateWithNameInContext(String ModuleID, LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMModuleCreateWithNameInContext(ModuleID, LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueModule(cPtr, false);
  }

  public static void LLVMDisposeModule(LLVMOpaqueModule M) {
    CoreJNI.LLVMDisposeModule(LLVMOpaqueModule.getCPtr(M));
  }

  public static String LLVMGetDataLayout(LLVMOpaqueModule M) {
    return CoreJNI.LLVMGetDataLayout(LLVMOpaqueModule.getCPtr(M));
  }

  public static void LLVMSetDataLayout(LLVMOpaqueModule M, String Triple) {
    CoreJNI.LLVMSetDataLayout(LLVMOpaqueModule.getCPtr(M), Triple);
  }

  public static String LLVMGetTarget(LLVMOpaqueModule M) {
    return CoreJNI.LLVMGetTarget(LLVMOpaqueModule.getCPtr(M));
  }

  public static void LLVMSetTarget(LLVMOpaqueModule M, String Triple) {
    CoreJNI.LLVMSetTarget(LLVMOpaqueModule.getCPtr(M), Triple);
  }

  public static void LLVMDumpModule(LLVMOpaqueModule M) {
    CoreJNI.LLVMDumpModule(LLVMOpaqueModule.getCPtr(M));
  }

  public static int LLVMPrintModuleToFile(LLVMOpaqueModule M, String Filename, LLVMOpaqueStringRefArray ErrorMessage) {
    return CoreJNI.LLVMPrintModuleToFile(LLVMOpaqueModule.getCPtr(M), Filename, LLVMOpaqueStringRefArray.getCPtr(ErrorMessage));
  }

  public static void LLVMSetModuleInlineAsm(LLVMOpaqueModule M, String Asm) {
    CoreJNI.LLVMSetModuleInlineAsm(LLVMOpaqueModule.getCPtr(M), Asm);
  }

  public static LLVMOpaqueContext LLVMGetModuleContext(LLVMOpaqueModule M) {
    long cPtr = CoreJNI.LLVMGetModuleContext(LLVMOpaqueModule.getCPtr(M));
    return (cPtr == 0) ? null : new LLVMOpaqueContext(cPtr, false);
  }

  public static LLVMOpaqueType LLVMGetTypeByName(LLVMOpaqueModule M, String Name) {
    long cPtr = CoreJNI.LLVMGetTypeByName(LLVMOpaqueModule.getCPtr(M), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static long LLVMGetNamedMetadataNumOperands(LLVMOpaqueModule M, String name) {
    return CoreJNI.LLVMGetNamedMetadataNumOperands(LLVMOpaqueModule.getCPtr(M), name);
  }

  public static void LLVMGetNamedMetadataOperands(LLVMOpaqueModule M, String name, LLVMOpaqueValueRefArray Dest) {
    CoreJNI.LLVMGetNamedMetadataOperands(LLVMOpaqueModule.getCPtr(M), name, LLVMOpaqueValueRefArray.getCPtr(Dest));
  }

  public static void LLVMAddNamedMetadataOperand(LLVMOpaqueModule M, String name, LLVMOpaqueValue Val) {
    CoreJNI.LLVMAddNamedMetadataOperand(LLVMOpaqueModule.getCPtr(M), name, LLVMOpaqueValue.getCPtr(Val));
  }

  public static LLVMOpaqueValue LLVMAddFunction(LLVMOpaqueModule M, String Name, LLVMOpaqueType FunctionTy) {
    long cPtr = CoreJNI.LLVMAddFunction(LLVMOpaqueModule.getCPtr(M), Name, LLVMOpaqueType.getCPtr(FunctionTy));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetNamedFunction(LLVMOpaqueModule M, String Name) {
    long cPtr = CoreJNI.LLVMGetNamedFunction(LLVMOpaqueModule.getCPtr(M), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetFirstFunction(LLVMOpaqueModule M) {
    long cPtr = CoreJNI.LLVMGetFirstFunction(LLVMOpaqueModule.getCPtr(M));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetLastFunction(LLVMOpaqueModule M) {
    long cPtr = CoreJNI.LLVMGetLastFunction(LLVMOpaqueModule.getCPtr(M));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetNextFunction(LLVMOpaqueValue Fn) {
    long cPtr = CoreJNI.LLVMGetNextFunction(LLVMOpaqueValue.getCPtr(Fn));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetPreviousFunction(LLVMOpaqueValue Fn) {
    long cPtr = CoreJNI.LLVMGetPreviousFunction(LLVMOpaqueValue.getCPtr(Fn));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMTypeKind LLVMGetTypeKind(LLVMOpaqueType Ty) {
    return LLVMTypeKind.swigToEnum(CoreJNI.LLVMGetTypeKind(LLVMOpaqueType.getCPtr(Ty)));
  }

  public static int LLVMTypeIsSized(LLVMOpaqueType Ty) {
    return CoreJNI.LLVMTypeIsSized(LLVMOpaqueType.getCPtr(Ty));
  }

  public static LLVMOpaqueContext LLVMGetTypeContext(LLVMOpaqueType Ty) {
    long cPtr = CoreJNI.LLVMGetTypeContext(LLVMOpaqueType.getCPtr(Ty));
    return (cPtr == 0) ? null : new LLVMOpaqueContext(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt1TypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMInt1TypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt8TypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMInt8TypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt16TypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMInt16TypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt32TypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMInt32TypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt64TypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMInt64TypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMIntTypeInContext(LLVMOpaqueContext C, long NumBits) {
    long cPtr = CoreJNI.LLVMIntTypeInContext(LLVMOpaqueContext.getCPtr(C), NumBits);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt1Type() {
    long cPtr = CoreJNI.LLVMInt1Type();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt8Type() {
    long cPtr = CoreJNI.LLVMInt8Type();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt16Type() {
    long cPtr = CoreJNI.LLVMInt16Type();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt32Type() {
    long cPtr = CoreJNI.LLVMInt32Type();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMInt64Type() {
    long cPtr = CoreJNI.LLVMInt64Type();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMIntType(long NumBits) {
    long cPtr = CoreJNI.LLVMIntType(NumBits);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static long LLVMGetIntTypeWidth(LLVMOpaqueType IntegerTy) {
    return CoreJNI.LLVMGetIntTypeWidth(LLVMOpaqueType.getCPtr(IntegerTy));
  }

  public static LLVMOpaqueType LLVMHalfTypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMHalfTypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMFloatTypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMFloatTypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMDoubleTypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMDoubleTypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMX86FP80TypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMX86FP80TypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMFP128TypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMFP128TypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMPPCFP128TypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMPPCFP128TypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMHalfType() {
    long cPtr = CoreJNI.LLVMHalfType();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMFloatType() {
    long cPtr = CoreJNI.LLVMFloatType();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMDoubleType() {
    long cPtr = CoreJNI.LLVMDoubleType();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMX86FP80Type() {
    long cPtr = CoreJNI.LLVMX86FP80Type();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMFP128Type() {
    long cPtr = CoreJNI.LLVMFP128Type();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMPPCFP128Type() {
    long cPtr = CoreJNI.LLVMPPCFP128Type();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMFunctionType(LLVMOpaqueType ReturnType, LLVMOpaqueTypeRefArray ParamTypes, long ParamCount, int IsVarArg) {
    long cPtr = CoreJNI.LLVMFunctionType(LLVMOpaqueType.getCPtr(ReturnType), LLVMOpaqueTypeRefArray.getCPtr(ParamTypes), ParamCount, IsVarArg);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static int LLVMIsFunctionVarArg(LLVMOpaqueType FunctionTy) {
    return CoreJNI.LLVMIsFunctionVarArg(LLVMOpaqueType.getCPtr(FunctionTy));
  }

  public static LLVMOpaqueType LLVMGetReturnType(LLVMOpaqueType FunctionTy) {
    long cPtr = CoreJNI.LLVMGetReturnType(LLVMOpaqueType.getCPtr(FunctionTy));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static long LLVMCountParamTypes(LLVMOpaqueType FunctionTy) {
    return CoreJNI.LLVMCountParamTypes(LLVMOpaqueType.getCPtr(FunctionTy));
  }

  public static void LLVMGetParamTypes(LLVMOpaqueType FunctionTy, LLVMOpaqueTypeRefArray Dest) {
    CoreJNI.LLVMGetParamTypes(LLVMOpaqueType.getCPtr(FunctionTy), LLVMOpaqueTypeRefArray.getCPtr(Dest));
  }

  public static LLVMOpaqueType LLVMStructTypeInContext(LLVMOpaqueContext C, LLVMOpaqueTypeRefArray ElementTypes, long ElementCount, int Packed) {
    long cPtr = CoreJNI.LLVMStructTypeInContext(LLVMOpaqueContext.getCPtr(C), LLVMOpaqueTypeRefArray.getCPtr(ElementTypes), ElementCount, Packed);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMStructType(LLVMOpaqueTypeRefArray ElementTypes, long ElementCount, int Packed) {
    long cPtr = CoreJNI.LLVMStructType(LLVMOpaqueTypeRefArray.getCPtr(ElementTypes), ElementCount, Packed);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMStructCreateNamed(LLVMOpaqueContext C, String Name) {
    long cPtr = CoreJNI.LLVMStructCreateNamed(LLVMOpaqueContext.getCPtr(C), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static String LLVMGetStructName(LLVMOpaqueType Ty) {
    return CoreJNI.LLVMGetStructName(LLVMOpaqueType.getCPtr(Ty));
  }

  public static void LLVMStructSetBody(LLVMOpaqueType StructTy, LLVMOpaqueTypeRefArray ElementTypes, long ElementCount, int Packed) {
    CoreJNI.LLVMStructSetBody(LLVMOpaqueType.getCPtr(StructTy), LLVMOpaqueTypeRefArray.getCPtr(ElementTypes), ElementCount, Packed);
  }

  public static long LLVMCountStructElementTypes(LLVMOpaqueType StructTy) {
    return CoreJNI.LLVMCountStructElementTypes(LLVMOpaqueType.getCPtr(StructTy));
  }

  public static void LLVMGetStructElementTypes(LLVMOpaqueType StructTy, LLVMOpaqueTypeRefArray Dest) {
    CoreJNI.LLVMGetStructElementTypes(LLVMOpaqueType.getCPtr(StructTy), LLVMOpaqueTypeRefArray.getCPtr(Dest));
  }

  public static int LLVMIsPackedStruct(LLVMOpaqueType StructTy) {
    return CoreJNI.LLVMIsPackedStruct(LLVMOpaqueType.getCPtr(StructTy));
  }

  public static int LLVMIsOpaqueStruct(LLVMOpaqueType StructTy) {
    return CoreJNI.LLVMIsOpaqueStruct(LLVMOpaqueType.getCPtr(StructTy));
  }

  public static LLVMOpaqueType LLVMGetElementType(LLVMOpaqueType Ty) {
    long cPtr = CoreJNI.LLVMGetElementType(LLVMOpaqueType.getCPtr(Ty));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMArrayType(LLVMOpaqueType ElementType, long ElementCount) {
    long cPtr = CoreJNI.LLVMArrayType(LLVMOpaqueType.getCPtr(ElementType), ElementCount);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static long LLVMGetArrayLength(LLVMOpaqueType ArrayTy) {
    return CoreJNI.LLVMGetArrayLength(LLVMOpaqueType.getCPtr(ArrayTy));
  }

  public static LLVMOpaqueType LLVMPointerType(LLVMOpaqueType ElementType, long AddressSpace) {
    long cPtr = CoreJNI.LLVMPointerType(LLVMOpaqueType.getCPtr(ElementType), AddressSpace);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static long LLVMGetPointerAddressSpace(LLVMOpaqueType PointerTy) {
    return CoreJNI.LLVMGetPointerAddressSpace(LLVMOpaqueType.getCPtr(PointerTy));
  }

  public static LLVMOpaqueType LLVMVectorType(LLVMOpaqueType ElementType, long ElementCount) {
    long cPtr = CoreJNI.LLVMVectorType(LLVMOpaqueType.getCPtr(ElementType), ElementCount);
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static long LLVMGetVectorSize(LLVMOpaqueType VectorTy) {
    return CoreJNI.LLVMGetVectorSize(LLVMOpaqueType.getCPtr(VectorTy));
  }

  public static LLVMOpaqueType LLVMVoidTypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMVoidTypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMLabelTypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMLabelTypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMX86MMXTypeInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMX86MMXTypeInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMVoidType() {
    long cPtr = CoreJNI.LLVMVoidType();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMLabelType() {
    long cPtr = CoreJNI.LLVMLabelType();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMX86MMXType() {
    long cPtr = CoreJNI.LLVMX86MMXType();
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static LLVMOpaqueType LLVMTypeOf(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMTypeOf(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueType(cPtr, false);
  }

  public static String LLVMGetValueName(LLVMOpaqueValue Val) {
    return CoreJNI.LLVMGetValueName(LLVMOpaqueValue.getCPtr(Val));
  }

  public static void LLVMSetValueName(LLVMOpaqueValue Val, String Name) {
    CoreJNI.LLVMSetValueName(LLVMOpaqueValue.getCPtr(Val), Name);
  }

  public static void LLVMDumpValue(LLVMOpaqueValue Val) {
    CoreJNI.LLVMDumpValue(LLVMOpaqueValue.getCPtr(Val));
  }

  public static void LLVMReplaceAllUsesWith(LLVMOpaqueValue OldVal, LLVMOpaqueValue NewVal) {
    CoreJNI.LLVMReplaceAllUsesWith(LLVMOpaqueValue.getCPtr(OldVal), LLVMOpaqueValue.getCPtr(NewVal));
  }

  public static int LLVMIsConstant(LLVMOpaqueValue Val) {
    return CoreJNI.LLVMIsConstant(LLVMOpaqueValue.getCPtr(Val));
  }

  public static int LLVMIsUndef(LLVMOpaqueValue Val) {
    return CoreJNI.LLVMIsUndef(LLVMOpaqueValue.getCPtr(Val));
  }

  public static LLVMOpaqueValue LLVMIsAArgument(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAArgument(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsABasicBlock(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsABasicBlock(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAInlineAsm(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAInlineAsm(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAMDNode(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAMDNode(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAMDString(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAMDString(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAUser(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAUser(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstant(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstant(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsABlockAddress(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsABlockAddress(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstantAggregateZero(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstantAggregateZero(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstantArray(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstantArray(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstantExpr(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstantExpr(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstantFP(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstantFP(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstantInt(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstantInt(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstantPointerNull(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstantPointerNull(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstantStruct(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstantStruct(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAConstantVector(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAConstantVector(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAGlobalValue(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAGlobalValue(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAFunction(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAFunction(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAGlobalAlias(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAGlobalAlias(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAGlobalVariable(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAGlobalVariable(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAUndefValue(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAUndefValue(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAInstruction(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAInstruction(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsABinaryOperator(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsABinaryOperator(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsACallInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsACallInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAIntrinsicInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAIntrinsicInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsADbgInfoIntrinsic(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsADbgInfoIntrinsic(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsADbgDeclareInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsADbgDeclareInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAMemIntrinsic(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAMemIntrinsic(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAMemCpyInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAMemCpyInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAMemMoveInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAMemMoveInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAMemSetInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAMemSetInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsACmpInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsACmpInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAFCmpInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAFCmpInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAICmpInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAICmpInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAExtractElementInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAExtractElementInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAGetElementPtrInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAGetElementPtrInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAInsertElementInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAInsertElementInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAInsertValueInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAInsertValueInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsALandingPadInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsALandingPadInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAPHINode(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAPHINode(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsASelectInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsASelectInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAShuffleVectorInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAShuffleVectorInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAStoreInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAStoreInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsATerminatorInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsATerminatorInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsABranchInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsABranchInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAIndirectBrInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAIndirectBrInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAInvokeInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAInvokeInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAReturnInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAReturnInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsASwitchInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsASwitchInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAUnreachableInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAUnreachableInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAResumeInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAResumeInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAUnaryInstruction(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAUnaryInstruction(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAAllocaInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAAllocaInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsACastInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsACastInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsABitCastInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsABitCastInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAFPExtInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAFPExtInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAFPToSIInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAFPToSIInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAFPToUIInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAFPToUIInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAFPTruncInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAFPTruncInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAIntToPtrInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAIntToPtrInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAPtrToIntInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAPtrToIntInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsASExtInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsASExtInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsASIToFPInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsASIToFPInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsATruncInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsATruncInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAUIToFPInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAUIToFPInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAZExtInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAZExtInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAExtractValueInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAExtractValueInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsALoadInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsALoadInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMIsAVAArgInst(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMIsAVAArgInst(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueUse LLVMGetFirstUse(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMGetFirstUse(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueUse(cPtr, false);
  }

  public static LLVMOpaqueUse LLVMGetNextUse(LLVMOpaqueUse U) {
    long cPtr = CoreJNI.LLVMGetNextUse(LLVMOpaqueUse.getCPtr(U));
    return (cPtr == 0) ? null : new LLVMOpaqueUse(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetUser(LLVMOpaqueUse U) {
    long cPtr = CoreJNI.LLVMGetUser(LLVMOpaqueUse.getCPtr(U));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetUsedValue(LLVMOpaqueUse U) {
    long cPtr = CoreJNI.LLVMGetUsedValue(LLVMOpaqueUse.getCPtr(U));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetOperand(LLVMOpaqueValue Val, long Index) {
    long cPtr = CoreJNI.LLVMGetOperand(LLVMOpaqueValue.getCPtr(Val), Index);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMSetOperand(LLVMOpaqueValue User, long Index, LLVMOpaqueValue Val) {
    CoreJNI.LLVMSetOperand(LLVMOpaqueValue.getCPtr(User), Index, LLVMOpaqueValue.getCPtr(Val));
  }

  public static int LLVMGetNumOperands(LLVMOpaqueValue Val) {
    return CoreJNI.LLVMGetNumOperands(LLVMOpaqueValue.getCPtr(Val));
  }

  public static LLVMOpaqueValue LLVMConstNull(LLVMOpaqueType Ty) {
    long cPtr = CoreJNI.LLVMConstNull(LLVMOpaqueType.getCPtr(Ty));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstAllOnes(LLVMOpaqueType Ty) {
    long cPtr = CoreJNI.LLVMConstAllOnes(LLVMOpaqueType.getCPtr(Ty));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetUndef(LLVMOpaqueType Ty) {
    long cPtr = CoreJNI.LLVMGetUndef(LLVMOpaqueType.getCPtr(Ty));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static int LLVMIsNull(LLVMOpaqueValue Val) {
    return CoreJNI.LLVMIsNull(LLVMOpaqueValue.getCPtr(Val));
  }

  public static LLVMOpaqueValue LLVMConstPointerNull(LLVMOpaqueType Ty) {
    long cPtr = CoreJNI.LLVMConstPointerNull(LLVMOpaqueType.getCPtr(Ty));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstInt(LLVMOpaqueType IntTy, java.math.BigInteger N, int SignExtend) {
    long cPtr = CoreJNI.LLVMConstInt(LLVMOpaqueType.getCPtr(IntTy), N, SignExtend);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstIntOfArbitraryPrecision(LLVMOpaqueType IntTy, long NumWords, LLVMOpaqueUint64_t Words) {
    long cPtr = CoreJNI.LLVMConstIntOfArbitraryPrecision(LLVMOpaqueType.getCPtr(IntTy), NumWords, LLVMOpaqueUint64_t.getCPtr(Words));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstIntOfString(LLVMOpaqueType IntTy, String Text, LLVMOpaqueUint8_t Radix) {
    long cPtr = CoreJNI.LLVMConstIntOfString(LLVMOpaqueType.getCPtr(IntTy), Text, LLVMOpaqueUint8_t.getCPtr(Radix));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstIntOfStringAndSize(LLVMOpaqueType IntTy, String Text, long SLen, LLVMOpaqueUint8_t Radix) {
    long cPtr = CoreJNI.LLVMConstIntOfStringAndSize(LLVMOpaqueType.getCPtr(IntTy), Text, SLen, LLVMOpaqueUint8_t.getCPtr(Radix));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstReal(LLVMOpaqueType RealTy, double N) {
    long cPtr = CoreJNI.LLVMConstReal(LLVMOpaqueType.getCPtr(RealTy), N);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstRealOfString(LLVMOpaqueType RealTy, String Text) {
    long cPtr = CoreJNI.LLVMConstRealOfString(LLVMOpaqueType.getCPtr(RealTy), Text);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstRealOfStringAndSize(LLVMOpaqueType RealTy, String Text, long SLen) {
    long cPtr = CoreJNI.LLVMConstRealOfStringAndSize(LLVMOpaqueType.getCPtr(RealTy), Text, SLen);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static java.math.BigInteger LLVMConstIntGetZExtValue(LLVMOpaqueValue ConstantVal) {
    return CoreJNI.LLVMConstIntGetZExtValue(LLVMOpaqueValue.getCPtr(ConstantVal));
  }

  public static long LLVMConstIntGetSExtValue(LLVMOpaqueValue ConstantVal) {
    return CoreJNI.LLVMConstIntGetSExtValue(LLVMOpaqueValue.getCPtr(ConstantVal));
  }

  public static LLVMOpaqueValue LLVMConstStringInContext(LLVMOpaqueContext C, String Str, long Length, int DontNullTerminate) {
    long cPtr = CoreJNI.LLVMConstStringInContext(LLVMOpaqueContext.getCPtr(C), Str, Length, DontNullTerminate);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstString(String Str, long Length, int DontNullTerminate) {
    long cPtr = CoreJNI.LLVMConstString(Str, Length, DontNullTerminate);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstStructInContext(LLVMOpaqueContext C, LLVMOpaqueValueRefArray ConstantVals, long Count, int Packed) {
    long cPtr = CoreJNI.LLVMConstStructInContext(LLVMOpaqueContext.getCPtr(C), LLVMOpaqueValueRefArray.getCPtr(ConstantVals), Count, Packed);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstStruct(LLVMOpaqueValueRefArray ConstantVals, long Count, int Packed) {
    long cPtr = CoreJNI.LLVMConstStruct(LLVMOpaqueValueRefArray.getCPtr(ConstantVals), Count, Packed);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstArray(LLVMOpaqueType ElementTy, LLVMOpaqueValueRefArray ConstantVals, long Length) {
    long cPtr = CoreJNI.LLVMConstArray(LLVMOpaqueType.getCPtr(ElementTy), LLVMOpaqueValueRefArray.getCPtr(ConstantVals), Length);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNamedStruct(LLVMOpaqueType StructTy, LLVMOpaqueValueRefArray ConstantVals, long Count) {
    long cPtr = CoreJNI.LLVMConstNamedStruct(LLVMOpaqueType.getCPtr(StructTy), LLVMOpaqueValueRefArray.getCPtr(ConstantVals), Count);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstVector(LLVMOpaqueValueRefArray ScalarConstantVals, long Size) {
    long cPtr = CoreJNI.LLVMConstVector(LLVMOpaqueValueRefArray.getCPtr(ScalarConstantVals), Size);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpcode LLVMGetConstOpcode(LLVMOpaqueValue ConstantVal) {
    return LLVMOpcode.swigToEnum(CoreJNI.LLVMGetConstOpcode(LLVMOpaqueValue.getCPtr(ConstantVal)));
  }

  public static LLVMOpaqueValue LLVMAlignOf(LLVMOpaqueType Ty) {
    long cPtr = CoreJNI.LLVMAlignOf(LLVMOpaqueType.getCPtr(Ty));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMSizeOf(LLVMOpaqueType Ty) {
    long cPtr = CoreJNI.LLVMSizeOf(LLVMOpaqueType.getCPtr(Ty));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNeg(LLVMOpaqueValue ConstantVal) {
    long cPtr = CoreJNI.LLVMConstNeg(LLVMOpaqueValue.getCPtr(ConstantVal));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNSWNeg(LLVMOpaqueValue ConstantVal) {
    long cPtr = CoreJNI.LLVMConstNSWNeg(LLVMOpaqueValue.getCPtr(ConstantVal));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNUWNeg(LLVMOpaqueValue ConstantVal) {
    long cPtr = CoreJNI.LLVMConstNUWNeg(LLVMOpaqueValue.getCPtr(ConstantVal));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFNeg(LLVMOpaqueValue ConstantVal) {
    long cPtr = CoreJNI.LLVMConstFNeg(LLVMOpaqueValue.getCPtr(ConstantVal));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNot(LLVMOpaqueValue ConstantVal) {
    long cPtr = CoreJNI.LLVMConstNot(LLVMOpaqueValue.getCPtr(ConstantVal));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstAdd(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstAdd(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNSWAdd(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstNSWAdd(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNUWAdd(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstNUWAdd(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFAdd(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstFAdd(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstSub(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstSub(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNSWSub(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstNSWSub(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNUWSub(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstNUWSub(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFSub(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstFSub(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstMul(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstMul(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNSWMul(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstNSWMul(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstNUWMul(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstNUWMul(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFMul(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstFMul(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstUDiv(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstUDiv(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstSDiv(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstSDiv(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstExactSDiv(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstExactSDiv(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFDiv(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstFDiv(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstURem(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstURem(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstSRem(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstSRem(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFRem(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstFRem(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstAnd(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstAnd(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstOr(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstOr(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstXor(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstXor(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstICmp(LLVMIntPredicate Predicate, LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstICmp(Predicate.swigValue(), LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFCmp(LLVMRealPredicate Predicate, LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstFCmp(Predicate.swigValue(), LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstShl(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstShl(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstLShr(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstLShr(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstAShr(LLVMOpaqueValue LHSConstant, LLVMOpaqueValue RHSConstant) {
    long cPtr = CoreJNI.LLVMConstAShr(LLVMOpaqueValue.getCPtr(LHSConstant), LLVMOpaqueValue.getCPtr(RHSConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstGEP(LLVMOpaqueValue ConstantVal, LLVMOpaqueValueRefArray ConstantIndices, long NumIndices) {
    long cPtr = CoreJNI.LLVMConstGEP(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueValueRefArray.getCPtr(ConstantIndices), NumIndices);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstInBoundsGEP(LLVMOpaqueValue ConstantVal, LLVMOpaqueValueRefArray ConstantIndices, long NumIndices) {
    long cPtr = CoreJNI.LLVMConstInBoundsGEP(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueValueRefArray.getCPtr(ConstantIndices), NumIndices);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstTrunc(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstTrunc(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstSExt(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstSExt(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstZExt(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstZExt(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFPTrunc(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstFPTrunc(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFPExt(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstFPExt(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstUIToFP(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstUIToFP(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstSIToFP(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstSIToFP(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFPToUI(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstFPToUI(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFPToSI(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstFPToSI(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstPtrToInt(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstPtrToInt(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstIntToPtr(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstIntToPtr(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstBitCast(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstBitCast(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstZExtOrBitCast(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstZExtOrBitCast(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstSExtOrBitCast(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstSExtOrBitCast(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstTruncOrBitCast(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstTruncOrBitCast(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstPointerCast(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstPointerCast(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstIntCast(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType, int isSigned) {
    long cPtr = CoreJNI.LLVMConstIntCast(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType), isSigned);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstFPCast(LLVMOpaqueValue ConstantVal, LLVMOpaqueType ToType) {
    long cPtr = CoreJNI.LLVMConstFPCast(LLVMOpaqueValue.getCPtr(ConstantVal), LLVMOpaqueType.getCPtr(ToType));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstSelect(LLVMOpaqueValue ConstantCondition, LLVMOpaqueValue ConstantIfTrue, LLVMOpaqueValue ConstantIfFalse) {
    long cPtr = CoreJNI.LLVMConstSelect(LLVMOpaqueValue.getCPtr(ConstantCondition), LLVMOpaqueValue.getCPtr(ConstantIfTrue), LLVMOpaqueValue.getCPtr(ConstantIfFalse));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstExtractElement(LLVMOpaqueValue VectorConstant, LLVMOpaqueValue IndexConstant) {
    long cPtr = CoreJNI.LLVMConstExtractElement(LLVMOpaqueValue.getCPtr(VectorConstant), LLVMOpaqueValue.getCPtr(IndexConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstInsertElement(LLVMOpaqueValue VectorConstant, LLVMOpaqueValue ElementValueConstant, LLVMOpaqueValue IndexConstant) {
    long cPtr = CoreJNI.LLVMConstInsertElement(LLVMOpaqueValue.getCPtr(VectorConstant), LLVMOpaqueValue.getCPtr(ElementValueConstant), LLVMOpaqueValue.getCPtr(IndexConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstShuffleVector(LLVMOpaqueValue VectorAConstant, LLVMOpaqueValue VectorBConstant, LLVMOpaqueValue MaskConstant) {
    long cPtr = CoreJNI.LLVMConstShuffleVector(LLVMOpaqueValue.getCPtr(VectorAConstant), LLVMOpaqueValue.getCPtr(VectorBConstant), LLVMOpaqueValue.getCPtr(MaskConstant));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstExtractValue(LLVMOpaqueValue AggConstant, LLVMOpaqueUnsigned_int IdxList, long NumIdx) {
    long cPtr = CoreJNI.LLVMConstExtractValue(LLVMOpaqueValue.getCPtr(AggConstant), LLVMOpaqueUnsigned_int.getCPtr(IdxList), NumIdx);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstInsertValue(LLVMOpaqueValue AggConstant, LLVMOpaqueValue ElementValueConstant, LLVMOpaqueUnsigned_int IdxList, long NumIdx) {
    long cPtr = CoreJNI.LLVMConstInsertValue(LLVMOpaqueValue.getCPtr(AggConstant), LLVMOpaqueValue.getCPtr(ElementValueConstant), LLVMOpaqueUnsigned_int.getCPtr(IdxList), NumIdx);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMConstInlineAsm(LLVMOpaqueType Ty, String AsmString, String Constraints, int HasSideEffects, int IsAlignStack) {
    long cPtr = CoreJNI.LLVMConstInlineAsm(LLVMOpaqueType.getCPtr(Ty), AsmString, Constraints, HasSideEffects, IsAlignStack);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBlockAddress(LLVMOpaqueValue F, LLVMOpaqueBasicBlock BB) {
    long cPtr = CoreJNI.LLVMBlockAddress(LLVMOpaqueValue.getCPtr(F), LLVMOpaqueBasicBlock.getCPtr(BB));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueModule LLVMGetGlobalParent(LLVMOpaqueValue Global) {
    long cPtr = CoreJNI.LLVMGetGlobalParent(LLVMOpaqueValue.getCPtr(Global));
    return (cPtr == 0) ? null : new LLVMOpaqueModule(cPtr, false);
  }

  public static int LLVMIsDeclaration(LLVMOpaqueValue Global) {
    return CoreJNI.LLVMIsDeclaration(LLVMOpaqueValue.getCPtr(Global));
  }

  public static LLVMLinkage LLVMGetLinkage(LLVMOpaqueValue Global) {
    return LLVMLinkage.swigToEnum(CoreJNI.LLVMGetLinkage(LLVMOpaqueValue.getCPtr(Global)));
  }

  public static void LLVMSetLinkage(LLVMOpaqueValue Global, LLVMLinkage Linkage) {
    CoreJNI.LLVMSetLinkage(LLVMOpaqueValue.getCPtr(Global), Linkage.swigValue());
  }

  public static String LLVMGetSection(LLVMOpaqueValue Global) {
    return CoreJNI.LLVMGetSection(LLVMOpaqueValue.getCPtr(Global));
  }

  public static void LLVMSetSection(LLVMOpaqueValue Global, String Section) {
    CoreJNI.LLVMSetSection(LLVMOpaqueValue.getCPtr(Global), Section);
  }

  public static LLVMVisibility LLVMGetVisibility(LLVMOpaqueValue Global) {
    return LLVMVisibility.swigToEnum(CoreJNI.LLVMGetVisibility(LLVMOpaqueValue.getCPtr(Global)));
  }

  public static void LLVMSetVisibility(LLVMOpaqueValue Global, LLVMVisibility Viz) {
    CoreJNI.LLVMSetVisibility(LLVMOpaqueValue.getCPtr(Global), Viz.swigValue());
  }

  public static long LLVMGetAlignment(LLVMOpaqueValue Global) {
    return CoreJNI.LLVMGetAlignment(LLVMOpaqueValue.getCPtr(Global));
  }

  public static void LLVMSetAlignment(LLVMOpaqueValue Global, long Bytes) {
    CoreJNI.LLVMSetAlignment(LLVMOpaqueValue.getCPtr(Global), Bytes);
  }

  public static LLVMOpaqueValue LLVMAddGlobal(LLVMOpaqueModule M, LLVMOpaqueType Ty, String Name) {
    long cPtr = CoreJNI.LLVMAddGlobal(LLVMOpaqueModule.getCPtr(M), LLVMOpaqueType.getCPtr(Ty), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMAddGlobalInAddressSpace(LLVMOpaqueModule M, LLVMOpaqueType Ty, String Name, long AddressSpace) {
    long cPtr = CoreJNI.LLVMAddGlobalInAddressSpace(LLVMOpaqueModule.getCPtr(M), LLVMOpaqueType.getCPtr(Ty), Name, AddressSpace);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetNamedGlobal(LLVMOpaqueModule M, String Name) {
    long cPtr = CoreJNI.LLVMGetNamedGlobal(LLVMOpaqueModule.getCPtr(M), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetFirstGlobal(LLVMOpaqueModule M) {
    long cPtr = CoreJNI.LLVMGetFirstGlobal(LLVMOpaqueModule.getCPtr(M));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetLastGlobal(LLVMOpaqueModule M) {
    long cPtr = CoreJNI.LLVMGetLastGlobal(LLVMOpaqueModule.getCPtr(M));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetNextGlobal(LLVMOpaqueValue GlobalVar) {
    long cPtr = CoreJNI.LLVMGetNextGlobal(LLVMOpaqueValue.getCPtr(GlobalVar));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetPreviousGlobal(LLVMOpaqueValue GlobalVar) {
    long cPtr = CoreJNI.LLVMGetPreviousGlobal(LLVMOpaqueValue.getCPtr(GlobalVar));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMDeleteGlobal(LLVMOpaqueValue GlobalVar) {
    CoreJNI.LLVMDeleteGlobal(LLVMOpaqueValue.getCPtr(GlobalVar));
  }

  public static LLVMOpaqueValue LLVMGetInitializer(LLVMOpaqueValue GlobalVar) {
    long cPtr = CoreJNI.LLVMGetInitializer(LLVMOpaqueValue.getCPtr(GlobalVar));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMSetInitializer(LLVMOpaqueValue GlobalVar, LLVMOpaqueValue ConstantVal) {
    CoreJNI.LLVMSetInitializer(LLVMOpaqueValue.getCPtr(GlobalVar), LLVMOpaqueValue.getCPtr(ConstantVal));
  }

  public static int LLVMIsThreadLocal(LLVMOpaqueValue GlobalVar) {
    return CoreJNI.LLVMIsThreadLocal(LLVMOpaqueValue.getCPtr(GlobalVar));
  }

  public static void LLVMSetThreadLocal(LLVMOpaqueValue GlobalVar, int IsThreadLocal) {
    CoreJNI.LLVMSetThreadLocal(LLVMOpaqueValue.getCPtr(GlobalVar), IsThreadLocal);
  }

  public static int LLVMIsGlobalConstant(LLVMOpaqueValue GlobalVar) {
    return CoreJNI.LLVMIsGlobalConstant(LLVMOpaqueValue.getCPtr(GlobalVar));
  }

  public static void LLVMSetGlobalConstant(LLVMOpaqueValue GlobalVar, int IsConstant) {
    CoreJNI.LLVMSetGlobalConstant(LLVMOpaqueValue.getCPtr(GlobalVar), IsConstant);
  }

  public static LLVMOpaqueValue LLVMAddAlias(LLVMOpaqueModule M, LLVMOpaqueType Ty, LLVMOpaqueValue Aliasee, String Name) {
    long cPtr = CoreJNI.LLVMAddAlias(LLVMOpaqueModule.getCPtr(M), LLVMOpaqueType.getCPtr(Ty), LLVMOpaqueValue.getCPtr(Aliasee), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMDeleteFunction(LLVMOpaqueValue Fn) {
    CoreJNI.LLVMDeleteFunction(LLVMOpaqueValue.getCPtr(Fn));
  }

  public static long LLVMGetIntrinsicID(LLVMOpaqueValue Fn) {
    return CoreJNI.LLVMGetIntrinsicID(LLVMOpaqueValue.getCPtr(Fn));
  }

  public static long LLVMGetFunctionCallConv(LLVMOpaqueValue Fn) {
    return CoreJNI.LLVMGetFunctionCallConv(LLVMOpaqueValue.getCPtr(Fn));
  }

  public static void LLVMSetFunctionCallConv(LLVMOpaqueValue Fn, long CC) {
    CoreJNI.LLVMSetFunctionCallConv(LLVMOpaqueValue.getCPtr(Fn), CC);
  }

  public static String LLVMGetGC(LLVMOpaqueValue Fn) {
    return CoreJNI.LLVMGetGC(LLVMOpaqueValue.getCPtr(Fn));
  }

  public static void LLVMSetGC(LLVMOpaqueValue Fn, String Name) {
    CoreJNI.LLVMSetGC(LLVMOpaqueValue.getCPtr(Fn), Name);
  }

  public static void LLVMAddFunctionAttr(LLVMOpaqueValue Fn, LLVMAttribute PA) {
    CoreJNI.LLVMAddFunctionAttr(LLVMOpaqueValue.getCPtr(Fn), PA.swigValue());
  }

  public static LLVMAttribute LLVMGetFunctionAttr(LLVMOpaqueValue Fn) {
    return LLVMAttribute.swigToEnum(CoreJNI.LLVMGetFunctionAttr(LLVMOpaqueValue.getCPtr(Fn)));
  }

  public static void LLVMRemoveFunctionAttr(LLVMOpaqueValue Fn, LLVMAttribute PA) {
    CoreJNI.LLVMRemoveFunctionAttr(LLVMOpaqueValue.getCPtr(Fn), PA.swigValue());
  }

  public static long LLVMCountParams(LLVMOpaqueValue Fn) {
    return CoreJNI.LLVMCountParams(LLVMOpaqueValue.getCPtr(Fn));
  }

  public static void LLVMGetParams(LLVMOpaqueValue Fn, LLVMOpaqueValueRefArray Params) {
    CoreJNI.LLVMGetParams(LLVMOpaqueValue.getCPtr(Fn), LLVMOpaqueValueRefArray.getCPtr(Params));
  }

  public static LLVMOpaqueValue LLVMGetParam(LLVMOpaqueValue Fn, long Index) {
    long cPtr = CoreJNI.LLVMGetParam(LLVMOpaqueValue.getCPtr(Fn), Index);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetParamParent(LLVMOpaqueValue Inst) {
    long cPtr = CoreJNI.LLVMGetParamParent(LLVMOpaqueValue.getCPtr(Inst));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetFirstParam(LLVMOpaqueValue Fn) {
    long cPtr = CoreJNI.LLVMGetFirstParam(LLVMOpaqueValue.getCPtr(Fn));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetLastParam(LLVMOpaqueValue Fn) {
    long cPtr = CoreJNI.LLVMGetLastParam(LLVMOpaqueValue.getCPtr(Fn));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetNextParam(LLVMOpaqueValue Arg) {
    long cPtr = CoreJNI.LLVMGetNextParam(LLVMOpaqueValue.getCPtr(Arg));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetPreviousParam(LLVMOpaqueValue Arg) {
    long cPtr = CoreJNI.LLVMGetPreviousParam(LLVMOpaqueValue.getCPtr(Arg));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMAddAttribute(LLVMOpaqueValue Arg, LLVMAttribute PA) {
    CoreJNI.LLVMAddAttribute(LLVMOpaqueValue.getCPtr(Arg), PA.swigValue());
  }

  public static void LLVMRemoveAttribute(LLVMOpaqueValue Arg, LLVMAttribute PA) {
    CoreJNI.LLVMRemoveAttribute(LLVMOpaqueValue.getCPtr(Arg), PA.swigValue());
  }

  public static LLVMAttribute LLVMGetAttribute(LLVMOpaqueValue Arg) {
    return LLVMAttribute.swigToEnum(CoreJNI.LLVMGetAttribute(LLVMOpaqueValue.getCPtr(Arg)));
  }

  public static void LLVMSetParamAlignment(LLVMOpaqueValue Arg, long align) {
    CoreJNI.LLVMSetParamAlignment(LLVMOpaqueValue.getCPtr(Arg), align);
  }

  public static LLVMOpaqueValue LLVMMDStringInContext(LLVMOpaqueContext C, String Str, long SLen) {
    long cPtr = CoreJNI.LLVMMDStringInContext(LLVMOpaqueContext.getCPtr(C), Str, SLen);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMMDString(String Str, long SLen) {
    long cPtr = CoreJNI.LLVMMDString(Str, SLen);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMMDNodeInContext(LLVMOpaqueContext C, LLVMOpaqueValueRefArray Vals, long Count) {
    long cPtr = CoreJNI.LLVMMDNodeInContext(LLVMOpaqueContext.getCPtr(C), LLVMOpaqueValueRefArray.getCPtr(Vals), Count);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMMDNode(LLVMOpaqueValueRefArray Vals, long Count) {
    long cPtr = CoreJNI.LLVMMDNode(LLVMOpaqueValueRefArray.getCPtr(Vals), Count);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static String LLVMGetMDString(LLVMOpaqueValue V, LLVMOpaqueUnsigned_int Len) {
    return CoreJNI.LLVMGetMDString(LLVMOpaqueValue.getCPtr(V), LLVMOpaqueUnsigned_int.getCPtr(Len));
  }

  public static long LLVMGetMDNodeNumOperands(LLVMOpaqueValue V) {
    return CoreJNI.LLVMGetMDNodeNumOperands(LLVMOpaqueValue.getCPtr(V));
  }

  public static void LLVMGetMDNodeOperands(LLVMOpaqueValue V, LLVMOpaqueValueRefArray Dest) {
    CoreJNI.LLVMGetMDNodeOperands(LLVMOpaqueValue.getCPtr(V), LLVMOpaqueValueRefArray.getCPtr(Dest));
  }

  public static LLVMOpaqueValue LLVMBasicBlockAsValue(LLVMOpaqueBasicBlock BB) {
    long cPtr = CoreJNI.LLVMBasicBlockAsValue(LLVMOpaqueBasicBlock.getCPtr(BB));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static int LLVMValueIsBasicBlock(LLVMOpaqueValue Val) {
    return CoreJNI.LLVMValueIsBasicBlock(LLVMOpaqueValue.getCPtr(Val));
  }

  public static LLVMOpaqueBasicBlock LLVMValueAsBasicBlock(LLVMOpaqueValue Val) {
    long cPtr = CoreJNI.LLVMValueAsBasicBlock(LLVMOpaqueValue.getCPtr(Val));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetBasicBlockParent(LLVMOpaqueBasicBlock BB) {
    long cPtr = CoreJNI.LLVMGetBasicBlockParent(LLVMOpaqueBasicBlock.getCPtr(BB));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetBasicBlockTerminator(LLVMOpaqueBasicBlock BB) {
    long cPtr = CoreJNI.LLVMGetBasicBlockTerminator(LLVMOpaqueBasicBlock.getCPtr(BB));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static long LLVMCountBasicBlocks(LLVMOpaqueValue Fn) {
    return CoreJNI.LLVMCountBasicBlocks(LLVMOpaqueValue.getCPtr(Fn));
  }

  public static void LLVMGetBasicBlocks(LLVMOpaqueValue Fn, LLVMOpaqueBasicBlockRefArray BasicBlocks) {
    CoreJNI.LLVMGetBasicBlocks(LLVMOpaqueValue.getCPtr(Fn), LLVMOpaqueBasicBlockRefArray.getCPtr(BasicBlocks));
  }

  public static LLVMOpaqueBasicBlock LLVMGetFirstBasicBlock(LLVMOpaqueValue Fn) {
    long cPtr = CoreJNI.LLVMGetFirstBasicBlock(LLVMOpaqueValue.getCPtr(Fn));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMGetLastBasicBlock(LLVMOpaqueValue Fn) {
    long cPtr = CoreJNI.LLVMGetLastBasicBlock(LLVMOpaqueValue.getCPtr(Fn));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMGetNextBasicBlock(LLVMOpaqueBasicBlock BB) {
    long cPtr = CoreJNI.LLVMGetNextBasicBlock(LLVMOpaqueBasicBlock.getCPtr(BB));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMGetPreviousBasicBlock(LLVMOpaqueBasicBlock BB) {
    long cPtr = CoreJNI.LLVMGetPreviousBasicBlock(LLVMOpaqueBasicBlock.getCPtr(BB));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMGetEntryBasicBlock(LLVMOpaqueValue Fn) {
    long cPtr = CoreJNI.LLVMGetEntryBasicBlock(LLVMOpaqueValue.getCPtr(Fn));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMAppendBasicBlockInContext(LLVMOpaqueContext C, LLVMOpaqueValue Fn, String Name) {
    long cPtr = CoreJNI.LLVMAppendBasicBlockInContext(LLVMOpaqueContext.getCPtr(C), LLVMOpaqueValue.getCPtr(Fn), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMAppendBasicBlock(LLVMOpaqueValue Fn, String Name) {
    long cPtr = CoreJNI.LLVMAppendBasicBlock(LLVMOpaqueValue.getCPtr(Fn), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMInsertBasicBlockInContext(LLVMOpaqueContext C, LLVMOpaqueBasicBlock BB, String Name) {
    long cPtr = CoreJNI.LLVMInsertBasicBlockInContext(LLVMOpaqueContext.getCPtr(C), LLVMOpaqueBasicBlock.getCPtr(BB), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMInsertBasicBlock(LLVMOpaqueBasicBlock InsertBeforeBB, String Name) {
    long cPtr = CoreJNI.LLVMInsertBasicBlock(LLVMOpaqueBasicBlock.getCPtr(InsertBeforeBB), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static void LLVMDeleteBasicBlock(LLVMOpaqueBasicBlock BB) {
    CoreJNI.LLVMDeleteBasicBlock(LLVMOpaqueBasicBlock.getCPtr(BB));
  }

  public static void LLVMRemoveBasicBlockFromParent(LLVMOpaqueBasicBlock BB) {
    CoreJNI.LLVMRemoveBasicBlockFromParent(LLVMOpaqueBasicBlock.getCPtr(BB));
  }

  public static void LLVMMoveBasicBlockBefore(LLVMOpaqueBasicBlock BB, LLVMOpaqueBasicBlock MovePos) {
    CoreJNI.LLVMMoveBasicBlockBefore(LLVMOpaqueBasicBlock.getCPtr(BB), LLVMOpaqueBasicBlock.getCPtr(MovePos));
  }

  public static void LLVMMoveBasicBlockAfter(LLVMOpaqueBasicBlock BB, LLVMOpaqueBasicBlock MovePos) {
    CoreJNI.LLVMMoveBasicBlockAfter(LLVMOpaqueBasicBlock.getCPtr(BB), LLVMOpaqueBasicBlock.getCPtr(MovePos));
  }

  public static LLVMOpaqueValue LLVMGetFirstInstruction(LLVMOpaqueBasicBlock BB) {
    long cPtr = CoreJNI.LLVMGetFirstInstruction(LLVMOpaqueBasicBlock.getCPtr(BB));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetLastInstruction(LLVMOpaqueBasicBlock BB) {
    long cPtr = CoreJNI.LLVMGetLastInstruction(LLVMOpaqueBasicBlock.getCPtr(BB));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static int LLVMHasMetadata(LLVMOpaqueValue Val) {
    return CoreJNI.LLVMHasMetadata(LLVMOpaqueValue.getCPtr(Val));
  }

  public static LLVMOpaqueValue LLVMGetMetadata(LLVMOpaqueValue Val, long KindID) {
    long cPtr = CoreJNI.LLVMGetMetadata(LLVMOpaqueValue.getCPtr(Val), KindID);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMSetMetadata(LLVMOpaqueValue Val, long KindID, LLVMOpaqueValue Node) {
    CoreJNI.LLVMSetMetadata(LLVMOpaqueValue.getCPtr(Val), KindID, LLVMOpaqueValue.getCPtr(Node));
  }

  public static LLVMOpaqueBasicBlock LLVMGetInstructionParent(LLVMOpaqueValue Inst) {
    long cPtr = CoreJNI.LLVMGetInstructionParent(LLVMOpaqueValue.getCPtr(Inst));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetNextInstruction(LLVMOpaqueValue Inst) {
    long cPtr = CoreJNI.LLVMGetNextInstruction(LLVMOpaqueValue.getCPtr(Inst));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMGetPreviousInstruction(LLVMOpaqueValue Inst) {
    long cPtr = CoreJNI.LLVMGetPreviousInstruction(LLVMOpaqueValue.getCPtr(Inst));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMInstructionEraseFromParent(LLVMOpaqueValue Inst) {
    CoreJNI.LLVMInstructionEraseFromParent(LLVMOpaqueValue.getCPtr(Inst));
  }

  public static LLVMOpcode LLVMGetInstructionOpcode(LLVMOpaqueValue Inst) {
    return LLVMOpcode.swigToEnum(CoreJNI.LLVMGetInstructionOpcode(LLVMOpaqueValue.getCPtr(Inst)));
  }

  public static LLVMIntPredicate LLVMGetICmpPredicate(LLVMOpaqueValue Inst) {
    return LLVMIntPredicate.swigToEnum(CoreJNI.LLVMGetICmpPredicate(LLVMOpaqueValue.getCPtr(Inst)));
  }

  public static void LLVMSetInstructionCallConv(LLVMOpaqueValue Instr, long CC) {
    CoreJNI.LLVMSetInstructionCallConv(LLVMOpaqueValue.getCPtr(Instr), CC);
  }

  public static long LLVMGetInstructionCallConv(LLVMOpaqueValue Instr) {
    return CoreJNI.LLVMGetInstructionCallConv(LLVMOpaqueValue.getCPtr(Instr));
  }

  public static void LLVMAddInstrAttribute(LLVMOpaqueValue Instr, long index, LLVMAttribute arg2) {
    CoreJNI.LLVMAddInstrAttribute(LLVMOpaqueValue.getCPtr(Instr), index, arg2.swigValue());
  }

  public static void LLVMRemoveInstrAttribute(LLVMOpaqueValue Instr, long index, LLVMAttribute arg2) {
    CoreJNI.LLVMRemoveInstrAttribute(LLVMOpaqueValue.getCPtr(Instr), index, arg2.swigValue());
  }

  public static void LLVMSetInstrParamAlignment(LLVMOpaqueValue Instr, long index, long align) {
    CoreJNI.LLVMSetInstrParamAlignment(LLVMOpaqueValue.getCPtr(Instr), index, align);
  }

  public static int LLVMIsTailCall(LLVMOpaqueValue CallInst) {
    return CoreJNI.LLVMIsTailCall(LLVMOpaqueValue.getCPtr(CallInst));
  }

  public static void LLVMSetTailCall(LLVMOpaqueValue CallInst, int IsTailCall) {
    CoreJNI.LLVMSetTailCall(LLVMOpaqueValue.getCPtr(CallInst), IsTailCall);
  }

  public static LLVMOpaqueBasicBlock LLVMGetSwitchDefaultDest(LLVMOpaqueValue SwitchInstr) {
    long cPtr = CoreJNI.LLVMGetSwitchDefaultDest(LLVMOpaqueValue.getCPtr(SwitchInstr));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static void LLVMAddIncoming(LLVMOpaqueValue PhiNode, LLVMOpaqueValueRefArray IncomingValues, LLVMOpaqueBasicBlockRefArray IncomingBlocks, long Count) {
    CoreJNI.LLVMAddIncoming(LLVMOpaqueValue.getCPtr(PhiNode), LLVMOpaqueValueRefArray.getCPtr(IncomingValues), LLVMOpaqueBasicBlockRefArray.getCPtr(IncomingBlocks), Count);
  }

  public static long LLVMCountIncoming(LLVMOpaqueValue PhiNode) {
    return CoreJNI.LLVMCountIncoming(LLVMOpaqueValue.getCPtr(PhiNode));
  }

  public static LLVMOpaqueValue LLVMGetIncomingValue(LLVMOpaqueValue PhiNode, long Index) {
    long cPtr = CoreJNI.LLVMGetIncomingValue(LLVMOpaqueValue.getCPtr(PhiNode), Index);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueBasicBlock LLVMGetIncomingBlock(LLVMOpaqueValue PhiNode, long Index) {
    long cPtr = CoreJNI.LLVMGetIncomingBlock(LLVMOpaqueValue.getCPtr(PhiNode), Index);
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static LLVMOpaqueBuilder LLVMCreateBuilderInContext(LLVMOpaqueContext C) {
    long cPtr = CoreJNI.LLVMCreateBuilderInContext(LLVMOpaqueContext.getCPtr(C));
    return (cPtr == 0) ? null : new LLVMOpaqueBuilder(cPtr, false);
  }

  public static LLVMOpaqueBuilder LLVMCreateBuilder() {
    long cPtr = CoreJNI.LLVMCreateBuilder();
    return (cPtr == 0) ? null : new LLVMOpaqueBuilder(cPtr, false);
  }

  public static void LLVMPositionBuilder(LLVMOpaqueBuilder Builder, LLVMOpaqueBasicBlock Block, LLVMOpaqueValue Instr) {
    CoreJNI.LLVMPositionBuilder(LLVMOpaqueBuilder.getCPtr(Builder), LLVMOpaqueBasicBlock.getCPtr(Block), LLVMOpaqueValue.getCPtr(Instr));
  }

  public static void LLVMPositionBuilderBefore(LLVMOpaqueBuilder Builder, LLVMOpaqueValue Instr) {
    CoreJNI.LLVMPositionBuilderBefore(LLVMOpaqueBuilder.getCPtr(Builder), LLVMOpaqueValue.getCPtr(Instr));
  }

  public static void LLVMPositionBuilderAtEnd(LLVMOpaqueBuilder Builder, LLVMOpaqueBasicBlock Block) {
    CoreJNI.LLVMPositionBuilderAtEnd(LLVMOpaqueBuilder.getCPtr(Builder), LLVMOpaqueBasicBlock.getCPtr(Block));
  }

  public static LLVMOpaqueBasicBlock LLVMGetInsertBlock(LLVMOpaqueBuilder Builder) {
    long cPtr = CoreJNI.LLVMGetInsertBlock(LLVMOpaqueBuilder.getCPtr(Builder));
    return (cPtr == 0) ? null : new LLVMOpaqueBasicBlock(cPtr, false);
  }

  public static void LLVMClearInsertionPosition(LLVMOpaqueBuilder Builder) {
    CoreJNI.LLVMClearInsertionPosition(LLVMOpaqueBuilder.getCPtr(Builder));
  }

  public static void LLVMInsertIntoBuilder(LLVMOpaqueBuilder Builder, LLVMOpaqueValue Instr) {
    CoreJNI.LLVMInsertIntoBuilder(LLVMOpaqueBuilder.getCPtr(Builder), LLVMOpaqueValue.getCPtr(Instr));
  }

  public static void LLVMInsertIntoBuilderWithName(LLVMOpaqueBuilder Builder, LLVMOpaqueValue Instr, String Name) {
    CoreJNI.LLVMInsertIntoBuilderWithName(LLVMOpaqueBuilder.getCPtr(Builder), LLVMOpaqueValue.getCPtr(Instr), Name);
  }

  public static void LLVMDisposeBuilder(LLVMOpaqueBuilder Builder) {
    CoreJNI.LLVMDisposeBuilder(LLVMOpaqueBuilder.getCPtr(Builder));
  }

  public static void LLVMSetCurrentDebugLocation(LLVMOpaqueBuilder Builder, LLVMOpaqueValue L) {
    CoreJNI.LLVMSetCurrentDebugLocation(LLVMOpaqueBuilder.getCPtr(Builder), LLVMOpaqueValue.getCPtr(L));
  }

  public static LLVMOpaqueValue LLVMGetCurrentDebugLocation(LLVMOpaqueBuilder Builder) {
    long cPtr = CoreJNI.LLVMGetCurrentDebugLocation(LLVMOpaqueBuilder.getCPtr(Builder));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMSetInstDebugLocation(LLVMOpaqueBuilder Builder, LLVMOpaqueValue Inst) {
    CoreJNI.LLVMSetInstDebugLocation(LLVMOpaqueBuilder.getCPtr(Builder), LLVMOpaqueValue.getCPtr(Inst));
  }

  public static LLVMOpaqueValue LLVMBuildRetVoid(LLVMOpaqueBuilder arg0) {
    long cPtr = CoreJNI.LLVMBuildRetVoid(LLVMOpaqueBuilder.getCPtr(arg0));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildRet(LLVMOpaqueBuilder arg0, LLVMOpaqueValue V) {
    long cPtr = CoreJNI.LLVMBuildRet(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(V));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildAggregateRet(LLVMOpaqueBuilder arg0, LLVMOpaqueValueRefArray RetVals, long N) {
    long cPtr = CoreJNI.LLVMBuildAggregateRet(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValueRefArray.getCPtr(RetVals), N);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildBr(LLVMOpaqueBuilder arg0, LLVMOpaqueBasicBlock Dest) {
    long cPtr = CoreJNI.LLVMBuildBr(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueBasicBlock.getCPtr(Dest));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildCondBr(LLVMOpaqueBuilder arg0, LLVMOpaqueValue If, LLVMOpaqueBasicBlock Then, LLVMOpaqueBasicBlock Else) {
    long cPtr = CoreJNI.LLVMBuildCondBr(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(If), LLVMOpaqueBasicBlock.getCPtr(Then), LLVMOpaqueBasicBlock.getCPtr(Else));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildSwitch(LLVMOpaqueBuilder arg0, LLVMOpaqueValue V, LLVMOpaqueBasicBlock Else, long NumCases) {
    long cPtr = CoreJNI.LLVMBuildSwitch(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(V), LLVMOpaqueBasicBlock.getCPtr(Else), NumCases);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildIndirectBr(LLVMOpaqueBuilder B, LLVMOpaqueValue Addr, long NumDests) {
    long cPtr = CoreJNI.LLVMBuildIndirectBr(LLVMOpaqueBuilder.getCPtr(B), LLVMOpaqueValue.getCPtr(Addr), NumDests);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildInvoke(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Fn, LLVMOpaqueValueRefArray Args, long NumArgs, LLVMOpaqueBasicBlock Then, LLVMOpaqueBasicBlock Catch, String Name) {
    long cPtr = CoreJNI.LLVMBuildInvoke(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Fn), LLVMOpaqueValueRefArray.getCPtr(Args), NumArgs, LLVMOpaqueBasicBlock.getCPtr(Then), LLVMOpaqueBasicBlock.getCPtr(Catch), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildLandingPad(LLVMOpaqueBuilder B, LLVMOpaqueType Ty, LLVMOpaqueValue PersFn, long NumClauses, String Name) {
    long cPtr = CoreJNI.LLVMBuildLandingPad(LLVMOpaqueBuilder.getCPtr(B), LLVMOpaqueType.getCPtr(Ty), LLVMOpaqueValue.getCPtr(PersFn), NumClauses, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildResume(LLVMOpaqueBuilder B, LLVMOpaqueValue Exn) {
    long cPtr = CoreJNI.LLVMBuildResume(LLVMOpaqueBuilder.getCPtr(B), LLVMOpaqueValue.getCPtr(Exn));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildUnreachable(LLVMOpaqueBuilder arg0) {
    long cPtr = CoreJNI.LLVMBuildUnreachable(LLVMOpaqueBuilder.getCPtr(arg0));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static void LLVMAddCase(LLVMOpaqueValue Switch, LLVMOpaqueValue OnVal, LLVMOpaqueBasicBlock Dest) {
    CoreJNI.LLVMAddCase(LLVMOpaqueValue.getCPtr(Switch), LLVMOpaqueValue.getCPtr(OnVal), LLVMOpaqueBasicBlock.getCPtr(Dest));
  }

  public static void LLVMAddDestination(LLVMOpaqueValue IndirectBr, LLVMOpaqueBasicBlock Dest) {
    CoreJNI.LLVMAddDestination(LLVMOpaqueValue.getCPtr(IndirectBr), LLVMOpaqueBasicBlock.getCPtr(Dest));
  }

  public static void LLVMAddClause(LLVMOpaqueValue LandingPad, LLVMOpaqueValue ClauseVal) {
    CoreJNI.LLVMAddClause(LLVMOpaqueValue.getCPtr(LandingPad), LLVMOpaqueValue.getCPtr(ClauseVal));
  }

  public static void LLVMSetCleanup(LLVMOpaqueValue LandingPad, int Val) {
    CoreJNI.LLVMSetCleanup(LLVMOpaqueValue.getCPtr(LandingPad), Val);
  }

  public static LLVMOpaqueValue LLVMBuildAdd(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildAdd(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNSWAdd(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildNSWAdd(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNUWAdd(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildNUWAdd(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFAdd(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildFAdd(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildSub(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildSub(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNSWSub(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildNSWSub(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNUWSub(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildNUWSub(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFSub(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildFSub(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildMul(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildMul(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNSWMul(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildNSWMul(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNUWMul(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildNUWMul(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFMul(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildFMul(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildUDiv(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildUDiv(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildSDiv(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildSDiv(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildExactSDiv(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildExactSDiv(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFDiv(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildFDiv(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildURem(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildURem(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildSRem(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildSRem(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFRem(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildFRem(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildShl(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildShl(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildLShr(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildLShr(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildAShr(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildAShr(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildAnd(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildAnd(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildOr(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildOr(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildXor(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildXor(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildBinOp(LLVMOpaqueBuilder B, LLVMOpcode Op, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildBinOp(LLVMOpaqueBuilder.getCPtr(B), Op.swigValue(), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNeg(LLVMOpaqueBuilder arg0, LLVMOpaqueValue V, String Name) {
    long cPtr = CoreJNI.LLVMBuildNeg(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(V), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNSWNeg(LLVMOpaqueBuilder B, LLVMOpaqueValue V, String Name) {
    long cPtr = CoreJNI.LLVMBuildNSWNeg(LLVMOpaqueBuilder.getCPtr(B), LLVMOpaqueValue.getCPtr(V), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNUWNeg(LLVMOpaqueBuilder B, LLVMOpaqueValue V, String Name) {
    long cPtr = CoreJNI.LLVMBuildNUWNeg(LLVMOpaqueBuilder.getCPtr(B), LLVMOpaqueValue.getCPtr(V), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFNeg(LLVMOpaqueBuilder arg0, LLVMOpaqueValue V, String Name) {
    long cPtr = CoreJNI.LLVMBuildFNeg(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(V), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildNot(LLVMOpaqueBuilder arg0, LLVMOpaqueValue V, String Name) {
    long cPtr = CoreJNI.LLVMBuildNot(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(V), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildMalloc(LLVMOpaqueBuilder arg0, LLVMOpaqueType Ty, String Name) {
    long cPtr = CoreJNI.LLVMBuildMalloc(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueType.getCPtr(Ty), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildArrayMalloc(LLVMOpaqueBuilder arg0, LLVMOpaqueType Ty, LLVMOpaqueValue Val, String Name) {
    long cPtr = CoreJNI.LLVMBuildArrayMalloc(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueType.getCPtr(Ty), LLVMOpaqueValue.getCPtr(Val), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildAlloca(LLVMOpaqueBuilder arg0, LLVMOpaqueType Ty, String Name) {
    long cPtr = CoreJNI.LLVMBuildAlloca(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueType.getCPtr(Ty), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildArrayAlloca(LLVMOpaqueBuilder arg0, LLVMOpaqueType Ty, LLVMOpaqueValue Val, String Name) {
    long cPtr = CoreJNI.LLVMBuildArrayAlloca(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueType.getCPtr(Ty), LLVMOpaqueValue.getCPtr(Val), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFree(LLVMOpaqueBuilder arg0, LLVMOpaqueValue PointerVal) {
    long cPtr = CoreJNI.LLVMBuildFree(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(PointerVal));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildLoad(LLVMOpaqueBuilder arg0, LLVMOpaqueValue PointerVal, String Name) {
    long cPtr = CoreJNI.LLVMBuildLoad(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(PointerVal), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildStore(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueValue Ptr) {
    long cPtr = CoreJNI.LLVMBuildStore(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueValue.getCPtr(Ptr));
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildGEP(LLVMOpaqueBuilder B, LLVMOpaqueValue Pointer, LLVMOpaqueValueRefArray Indices, long NumIndices, String Name) {
    long cPtr = CoreJNI.LLVMBuildGEP(LLVMOpaqueBuilder.getCPtr(B), LLVMOpaqueValue.getCPtr(Pointer), LLVMOpaqueValueRefArray.getCPtr(Indices), NumIndices, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildInBoundsGEP(LLVMOpaqueBuilder B, LLVMOpaqueValue Pointer, LLVMOpaqueValueRefArray Indices, long NumIndices, String Name) {
    long cPtr = CoreJNI.LLVMBuildInBoundsGEP(LLVMOpaqueBuilder.getCPtr(B), LLVMOpaqueValue.getCPtr(Pointer), LLVMOpaqueValueRefArray.getCPtr(Indices), NumIndices, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildStructGEP(LLVMOpaqueBuilder B, LLVMOpaqueValue Pointer, long Idx, String Name) {
    long cPtr = CoreJNI.LLVMBuildStructGEP(LLVMOpaqueBuilder.getCPtr(B), LLVMOpaqueValue.getCPtr(Pointer), Idx, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildGlobalString(LLVMOpaqueBuilder B, String Str, String Name) {
    long cPtr = CoreJNI.LLVMBuildGlobalString(LLVMOpaqueBuilder.getCPtr(B), Str, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildGlobalStringPtr(LLVMOpaqueBuilder B, String Str, String Name) {
    long cPtr = CoreJNI.LLVMBuildGlobalStringPtr(LLVMOpaqueBuilder.getCPtr(B), Str, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static int LLVMGetVolatile(LLVMOpaqueValue MemoryAccessInst) {
    return CoreJNI.LLVMGetVolatile(LLVMOpaqueValue.getCPtr(MemoryAccessInst));
  }

  public static void LLVMSetVolatile(LLVMOpaqueValue MemoryAccessInst, int IsVolatile) {
    CoreJNI.LLVMSetVolatile(LLVMOpaqueValue.getCPtr(MemoryAccessInst), IsVolatile);
  }

  public static LLVMOpaqueValue LLVMBuildTrunc(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildTrunc(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildZExt(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildZExt(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildSExt(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildSExt(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFPToUI(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildFPToUI(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFPToSI(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildFPToSI(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildUIToFP(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildUIToFP(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildSIToFP(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildSIToFP(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFPTrunc(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildFPTrunc(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFPExt(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildFPExt(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildPtrToInt(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildPtrToInt(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildIntToPtr(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildIntToPtr(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildBitCast(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildBitCast(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildZExtOrBitCast(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildZExtOrBitCast(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildSExtOrBitCast(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildSExtOrBitCast(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildTruncOrBitCast(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildTruncOrBitCast(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildCast(LLVMOpaqueBuilder B, LLVMOpcode Op, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildCast(LLVMOpaqueBuilder.getCPtr(B), Op.swigValue(), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildPointerCast(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildPointerCast(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildIntCast(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildIntCast(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFPCast(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, LLVMOpaqueType DestTy, String Name) {
    long cPtr = CoreJNI.LLVMBuildFPCast(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), LLVMOpaqueType.getCPtr(DestTy), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildICmp(LLVMOpaqueBuilder arg0, LLVMIntPredicate Op, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildICmp(LLVMOpaqueBuilder.getCPtr(arg0), Op.swigValue(), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildFCmp(LLVMOpaqueBuilder arg0, LLVMRealPredicate Op, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildFCmp(LLVMOpaqueBuilder.getCPtr(arg0), Op.swigValue(), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildPhi(LLVMOpaqueBuilder arg0, LLVMOpaqueType Ty, String Name) {
    long cPtr = CoreJNI.LLVMBuildPhi(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueType.getCPtr(Ty), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildCall(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Fn, LLVMOpaqueValueRefArray Args, long NumArgs, String Name) {
    long cPtr = CoreJNI.LLVMBuildCall(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Fn), LLVMOpaqueValueRefArray.getCPtr(Args), NumArgs, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildSelect(LLVMOpaqueBuilder arg0, LLVMOpaqueValue If, LLVMOpaqueValue Then, LLVMOpaqueValue Else, String Name) {
    long cPtr = CoreJNI.LLVMBuildSelect(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(If), LLVMOpaqueValue.getCPtr(Then), LLVMOpaqueValue.getCPtr(Else), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildVAArg(LLVMOpaqueBuilder arg0, LLVMOpaqueValue List, LLVMOpaqueType Ty, String Name) {
    long cPtr = CoreJNI.LLVMBuildVAArg(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(List), LLVMOpaqueType.getCPtr(Ty), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildExtractElement(LLVMOpaqueBuilder arg0, LLVMOpaqueValue VecVal, LLVMOpaqueValue Index, String Name) {
    long cPtr = CoreJNI.LLVMBuildExtractElement(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(VecVal), LLVMOpaqueValue.getCPtr(Index), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildInsertElement(LLVMOpaqueBuilder arg0, LLVMOpaqueValue VecVal, LLVMOpaqueValue EltVal, LLVMOpaqueValue Index, String Name) {
    long cPtr = CoreJNI.LLVMBuildInsertElement(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(VecVal), LLVMOpaqueValue.getCPtr(EltVal), LLVMOpaqueValue.getCPtr(Index), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildShuffleVector(LLVMOpaqueBuilder arg0, LLVMOpaqueValue V1, LLVMOpaqueValue V2, LLVMOpaqueValue Mask, String Name) {
    long cPtr = CoreJNI.LLVMBuildShuffleVector(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(V1), LLVMOpaqueValue.getCPtr(V2), LLVMOpaqueValue.getCPtr(Mask), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildExtractValue(LLVMOpaqueBuilder arg0, LLVMOpaqueValue AggVal, long Index, String Name) {
    long cPtr = CoreJNI.LLVMBuildExtractValue(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(AggVal), Index, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildInsertValue(LLVMOpaqueBuilder arg0, LLVMOpaqueValue AggVal, LLVMOpaqueValue EltVal, long Index, String Name) {
    long cPtr = CoreJNI.LLVMBuildInsertValue(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(AggVal), LLVMOpaqueValue.getCPtr(EltVal), Index, Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildIsNull(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, String Name) {
    long cPtr = CoreJNI.LLVMBuildIsNull(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildIsNotNull(LLVMOpaqueBuilder arg0, LLVMOpaqueValue Val, String Name) {
    long cPtr = CoreJNI.LLVMBuildIsNotNull(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(Val), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueValue LLVMBuildPtrDiff(LLVMOpaqueBuilder arg0, LLVMOpaqueValue LHS, LLVMOpaqueValue RHS, String Name) {
    long cPtr = CoreJNI.LLVMBuildPtrDiff(LLVMOpaqueBuilder.getCPtr(arg0), LLVMOpaqueValue.getCPtr(LHS), LLVMOpaqueValue.getCPtr(RHS), Name);
    return (cPtr == 0) ? null : new LLVMOpaqueValue(cPtr, false);
  }

  public static LLVMOpaqueModuleProvider LLVMCreateModuleProviderForExistingModule(LLVMOpaqueModule M) {
    long cPtr = CoreJNI.LLVMCreateModuleProviderForExistingModule(LLVMOpaqueModule.getCPtr(M));
    return (cPtr == 0) ? null : new LLVMOpaqueModuleProvider(cPtr, false);
  }

  public static void LLVMDisposeModuleProvider(LLVMOpaqueModuleProvider M) {
    CoreJNI.LLVMDisposeModuleProvider(LLVMOpaqueModuleProvider.getCPtr(M));
  }

  public static int LLVMCreateMemoryBufferWithContentsOfFile(String Path, LLVMOpaqueMemoryBufferRefArray OutMemBuf, LLVMOpaqueStringRefArray OutMessage) {
    return CoreJNI.LLVMCreateMemoryBufferWithContentsOfFile(Path, LLVMOpaqueMemoryBufferRefArray.getCPtr(OutMemBuf), LLVMOpaqueStringRefArray.getCPtr(OutMessage));
  }

  public static int LLVMCreateMemoryBufferWithSTDIN(LLVMOpaqueMemoryBufferRefArray OutMemBuf, LLVMOpaqueStringRefArray OutMessage) {
    return CoreJNI.LLVMCreateMemoryBufferWithSTDIN(LLVMOpaqueMemoryBufferRefArray.getCPtr(OutMemBuf), LLVMOpaqueStringRefArray.getCPtr(OutMessage));
  }

  public static void LLVMDisposeMemoryBuffer(LLVMOpaqueMemoryBuffer MemBuf) {
    CoreJNI.LLVMDisposeMemoryBuffer(LLVMOpaqueMemoryBuffer.getCPtr(MemBuf));
  }

  public static LLVMOpaquePassRegistry LLVMGetGlobalPassRegistry() {
    long cPtr = CoreJNI.LLVMGetGlobalPassRegistry();
    return (cPtr == 0) ? null : new LLVMOpaquePassRegistry(cPtr, false);
  }

  public static LLVMOpaquePassManager LLVMCreatePassManager() {
    long cPtr = CoreJNI.LLVMCreatePassManager();
    return (cPtr == 0) ? null : new LLVMOpaquePassManager(cPtr, false);
  }

  public static LLVMOpaquePassManager LLVMCreateFunctionPassManagerForModule(LLVMOpaqueModule M) {
    long cPtr = CoreJNI.LLVMCreateFunctionPassManagerForModule(LLVMOpaqueModule.getCPtr(M));
    return (cPtr == 0) ? null : new LLVMOpaquePassManager(cPtr, false);
  }

  public static LLVMOpaquePassManager LLVMCreateFunctionPassManager(LLVMOpaqueModuleProvider MP) {
    long cPtr = CoreJNI.LLVMCreateFunctionPassManager(LLVMOpaqueModuleProvider.getCPtr(MP));
    return (cPtr == 0) ? null : new LLVMOpaquePassManager(cPtr, false);
  }

  public static int LLVMRunPassManager(LLVMOpaquePassManager PM, LLVMOpaqueModule M) {
    return CoreJNI.LLVMRunPassManager(LLVMOpaquePassManager.getCPtr(PM), LLVMOpaqueModule.getCPtr(M));
  }

  public static int LLVMInitializeFunctionPassManager(LLVMOpaquePassManager FPM) {
    return CoreJNI.LLVMInitializeFunctionPassManager(LLVMOpaquePassManager.getCPtr(FPM));
  }

  public static int LLVMRunFunctionPassManager(LLVMOpaquePassManager FPM, LLVMOpaqueValue F) {
    return CoreJNI.LLVMRunFunctionPassManager(LLVMOpaquePassManager.getCPtr(FPM), LLVMOpaqueValue.getCPtr(F));
  }

  public static int LLVMFinalizeFunctionPassManager(LLVMOpaquePassManager FPM) {
    return CoreJNI.LLVMFinalizeFunctionPassManager(LLVMOpaquePassManager.getCPtr(FPM));
  }

  public static void LLVMDisposePassManager(LLVMOpaquePassManager PM) {
    CoreJNI.LLVMDisposePassManager(LLVMOpaquePassManager.getCPtr(PM));
  }

}
